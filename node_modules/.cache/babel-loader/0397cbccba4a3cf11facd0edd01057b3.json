{"ast":null,"code":"import _classCallCheck from\"C:/Users/keoam/Documents/Github/playlister-project-client/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/keoam/Documents/Github/playlister-project-client/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/keoam/Documents/Github/playlister-project-client/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/keoam/Documents/Github/playlister-project-client/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import jsTPS_Transaction from\"../common/jsTPS.js\";/**\r\n * CreateSong_Transaction\r\n * \r\n * This class represents a transaction that creates a song\r\n * in the playlist. It will be managed by the transaction stack.\r\n * \r\n * @author McKilla Gorilla\r\n * @author ?\r\n */var CreateSong_Transaction=/*#__PURE__*/function(_jsTPS_Transaction){_inherits(CreateSong_Transaction,_jsTPS_Transaction);var _super=_createSuper(CreateSong_Transaction);function CreateSong_Transaction(initStore,initIndex,initSong){var _this;_classCallCheck(this,CreateSong_Transaction);_this=_super.call(this);_this.store=initStore;_this.index=initIndex;_this.song=initSong;return _this;}_createClass(CreateSong_Transaction,[{key:\"doTransaction\",value:function doTransaction(){this.store.createSong(this.index,this.song);}},{key:\"undoTransaction\",value:function undoTransaction(){this.store.removeSong(this.index);}}]);return CreateSong_Transaction;}(jsTPS_Transaction);export{CreateSong_Transaction as default};","map":{"version":3,"names":["jsTPS_Transaction","CreateSong_Transaction","initStore","initIndex","initSong","store","index","song","createSong","removeSong"],"sources":["C:/Users/keoam/Documents/Github/playlister-project-client/src/transactions/CreateSong_Transaction.js"],"sourcesContent":["import jsTPS_Transaction from \"../common/jsTPS.js\"\r\n/**\r\n * CreateSong_Transaction\r\n * \r\n * This class represents a transaction that creates a song\r\n * in the playlist. It will be managed by the transaction stack.\r\n * \r\n * @author McKilla Gorilla\r\n * @author ?\r\n */\r\nexport default class CreateSong_Transaction extends jsTPS_Transaction {\r\n    constructor(initStore, initIndex, initSong) {\r\n        super();\r\n        this.store = initStore;\r\n        this.index = initIndex;\r\n        this.song = initSong;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.store.createSong(this.index, this.song);\r\n    }\r\n    \r\n    undoTransaction() {\r\n        this.store.removeSong(this.index);\r\n    }\r\n}"],"mappings":"4iBAAA,MAAOA,kBAAiB,KAAM,oBAAoB,CAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARA,GASqBC,uBAAsB,gJACvC,gCAAYC,SAAS,CAAEC,SAAS,CAAEC,QAAQ,CAAE,wDACxC,wBACA,MAAKC,KAAK,CAAGH,SAAS,CACtB,MAAKI,KAAK,CAAGH,SAAS,CACtB,MAAKI,IAAI,CAAGH,QAAQ,CAAC,aACzB,CAAC,gEAED,wBAAgB,CACZ,IAAI,CAACC,KAAK,CAACG,UAAU,CAAC,IAAI,CAACF,KAAK,CAAE,IAAI,CAACC,IAAI,CAAC,CAChD,CAAC,+BAED,0BAAkB,CACd,IAAI,CAACF,KAAK,CAACI,UAAU,CAAC,IAAI,CAACH,KAAK,CAAC,CACrC,CAAC,oCAd+CN,iBAAiB,SAAhDC,sBAAsB"},"metadata":{},"sourceType":"module"}