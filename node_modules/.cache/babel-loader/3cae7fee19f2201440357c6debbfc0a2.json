{"ast":null,"code":"/*\r\n    This is our http api, which we use to send requests to\r\n    our back-end API. Note we`re using the Axios library\r\n    for doing this, which is an easy to use AJAX-based\r\n    library. We could (and maybe should) use Fetch, which\r\n    is a native (to browsers) standard, but Axios is easier\r\n    to use when sending JSON back and forth and it`s a Promise-\r\n    based API which helps a lot with asynchronous communication.\r\n    \r\n    @author McKilla Gorilla\r\n*/import axios from'axios';axios.defaults.withCredentials=true;var api=axios.create({baseURL:'https://playlister-project.herokuapp.com/api/'});// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /top5list). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE WE WILL FORMAT HERE, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\nexport var createPlaylist=function createPlaylist(newListName,newSongs,userEmail,username,publishedDate,listens,likers,dislikers,comments){return api.post(\"/playlist/\",{// SPECIFY THE PAYLOAD\nname:newListName,songs:newSongs,ownerEmail:userEmail,ownerUsername:username,publishedDate:publishedDate,listens:listens,likers:likers,dislikers:dislikers,comments:comments});};export var deletePlaylistById=function deletePlaylistById(id){return api.delete(\"/playlist/\".concat(id));};export var getPlaylistById=function getPlaylistById(id){return api.get(\"/playlist/\".concat(id));};export var getPlaylistPairs=function getPlaylistPairs(){return api.get(\"/playlistpairs/\");};export var getPlaylists=function getPlaylists(){return api.get(\"/playlists/\");};export var updatePlaylistById=function updatePlaylistById(id,playlist){return api.put(\"/playlist/\".concat(id),{// SPECIFY THE PAYLOAD\nplaylist:playlist});};var apis={createPlaylist:createPlaylist,deletePlaylistById:deletePlaylistById,getPlaylistById:getPlaylistById,getPlaylistPairs:getPlaylistPairs,getPlaylists:getPlaylists,updatePlaylistById:updatePlaylistById};export default apis;","map":{"version":3,"names":["axios","defaults","withCredentials","api","create","baseURL","createPlaylist","newListName","newSongs","userEmail","username","publishedDate","listens","likers","dislikers","comments","post","name","songs","ownerEmail","ownerUsername","deletePlaylistById","id","delete","getPlaylistById","get","getPlaylistPairs","getPlaylists","updatePlaylistById","playlist","put","apis"],"sources":["C:/Users/keoam/Documents/Github/playlister-project-client/src/store/store-request-api/index.js"],"sourcesContent":["/*\r\n    This is our http api, which we use to send requests to\r\n    our back-end API. Note we`re using the Axios library\r\n    for doing this, which is an easy to use AJAX-based\r\n    library. We could (and maybe should) use Fetch, which\r\n    is a native (to browsers) standard, but Axios is easier\r\n    to use when sending JSON back and forth and it`s a Promise-\r\n    based API which helps a lot with asynchronous communication.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\n\r\nimport axios from 'axios'\r\naxios.defaults.withCredentials = true;\r\nconst api = axios.create({\r\n    baseURL: 'https://playlister-project.herokuapp.com/api/',\r\n})\r\n\r\n// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\r\n// REQUEST METHOD (like get) AND PATH (like /top5list). SOME ALSO\r\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\r\n// WORK, AND SOME REQUIRE DATA, WHICH WE WE WILL FORMAT HERE, FOR WHEN\r\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\r\n// CUSTOM FILTERS FOR QUERIES\r\nexport const createPlaylist = (newListName, newSongs, userEmail, username, publishedDate, listens, likers, dislikers, comments) => {\r\n    return api.post(`/playlist/`, {\r\n        // SPECIFY THE PAYLOAD\r\n        name: newListName,\r\n        songs: newSongs,\r\n        ownerEmail: userEmail,\r\n        ownerUsername: username,\r\n        publishedDate: publishedDate,\r\n        listens: listens,\r\n        likers: likers,\r\n        dislikers: dislikers,\r\n        comments: comments\r\n    })\r\n}\r\nexport const deletePlaylistById = (id) => api.delete(`/playlist/${id}`)\r\nexport const getPlaylistById = (id) => api.get(`/playlist/${id}`)\r\nexport const getPlaylistPairs = () => api.get(`/playlistpairs/`)\r\nexport const getPlaylists = () => api.get(`/playlists/`)\r\nexport const updatePlaylistById = (id, playlist) => {\r\n    return api.put(`/playlist/${id}`, {\r\n        // SPECIFY THE PAYLOAD\r\n        playlist: playlist\r\n    })\r\n}\r\n\r\nconst apis = {\r\n    createPlaylist,\r\n    deletePlaylistById,\r\n    getPlaylistById,\r\n    getPlaylistPairs,\r\n    getPlaylists,\r\n    updatePlaylistById\r\n}\r\n\r\nexport default apis\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,MAAOA,MAAK,KAAM,OAAO,CACzBA,KAAK,CAACC,QAAQ,CAACC,eAAe,CAAG,IAAI,CACrC,GAAMC,IAAG,CAAGH,KAAK,CAACI,MAAM,CAAC,CACrBC,OAAO,CAAE,+CACb,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,IAAMC,eAAc,CAAG,QAAjBA,eAAc,CAAIC,WAAW,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,QAAQ,CAAEC,aAAa,CAAEC,OAAO,CAAEC,MAAM,CAAEC,SAAS,CAAEC,QAAQ,CAAK,CAC/H,MAAOZ,IAAG,CAACa,IAAI,cAAe,CAC1B;AACAC,IAAI,CAAEV,WAAW,CACjBW,KAAK,CAAEV,QAAQ,CACfW,UAAU,CAAEV,SAAS,CACrBW,aAAa,CAAEV,QAAQ,CACvBC,aAAa,CAAEA,aAAa,CAC5BC,OAAO,CAAEA,OAAO,CAChBC,MAAM,CAAEA,MAAM,CACdC,SAAS,CAAEA,SAAS,CACpBC,QAAQ,CAAEA,QACd,CAAC,CAAC,CACN,CAAC,CACD,MAAO,IAAMM,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIC,EAAE,QAAKnB,IAAG,CAACoB,MAAM,qBAAcD,EAAE,EAAG,GACvE,MAAO,IAAME,gBAAe,CAAG,QAAlBA,gBAAe,CAAIF,EAAE,QAAKnB,IAAG,CAACsB,GAAG,qBAAcH,EAAE,EAAG,GACjE,MAAO,IAAMI,iBAAgB,CAAG,QAAnBA,iBAAgB,SAASvB,IAAG,CAACsB,GAAG,mBAAmB,GAChE,MAAO,IAAME,aAAY,CAAG,QAAfA,aAAY,SAASxB,IAAG,CAACsB,GAAG,eAAe,GACxD,MAAO,IAAMG,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIN,EAAE,CAAEO,QAAQ,CAAK,CAChD,MAAO1B,IAAG,CAAC2B,GAAG,qBAAcR,EAAE,EAAI,CAC9B;AACAO,QAAQ,CAAEA,QACd,CAAC,CAAC,CACN,CAAC,CAED,GAAME,KAAI,CAAG,CACTzB,cAAc,CAAdA,cAAc,CACde,kBAAkB,CAAlBA,kBAAkB,CAClBG,eAAe,CAAfA,eAAe,CACfE,gBAAgB,CAAhBA,gBAAgB,CAChBC,YAAY,CAAZA,YAAY,CACZC,kBAAkB,CAAlBA,kBACJ,CAAC,CAED,cAAeG,KAAI"},"metadata":{},"sourceType":"module"}