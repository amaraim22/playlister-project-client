{"version":3,"sources":["auth/auth-request-api/index.js","auth/index.js","common/jsTPS.js","store/store-request-api/index.js","transactions/CreateSong_Transaction.js","transactions/MoveSong_Transaction.js","transactions/RemoveSong_Transaction.js","transactions/UpdateSong_Transaction.js","store/index.js","components/AppBanner.js","components/NavBar.js","components/MUIDeleteModal.js","components/Statusbar.js","components/SongCard.js","components/EditToolbar.js","components/ListCard.js","components/AllScreen.js","components/UserScreen.js","components/MUIEditSongModal.js","components/MUIRemoveSongModal.js","components/WorkspaceScreen.js","components/PlaylisterYoutubePlayer.js","components/CommentsBox.js","components/HomeScreen.js","components/SplashScreen.js","components/GuestScreen.js","components/HomeWrapper.js","components/Copyright.js","components/LoginScreen.js","components/RegisterScreen.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","withCredentials","api","create","baseURL","apis","getLoggedIn","get","registerUser","username","email","firstName","lastName","password","passwordVerify","post","loginUser","logoutUser","AuthContext","createContext","console","log","AuthActionType","AuthContextProvider","props","useState","user","loggedIn","modalMsg","modalVisible","isGuest","auth","setAuth","history","useHistory","useEffect","authReducer","action","type","payload","response","status","data","push","errorMessage","getUserInitials","initials","charAt","hideModal","guestUser","guestValue","Provider","value","children","jsTPS","this","transactions","numTransactions","mostRecentTransaction","performingDo","performingUndo","length","getSize","transaction","i","splice","doTransaction","hasTransactionToRedo","hasTransactionToUndo","undoTransaction","text","toString","createPlaylist","newListName","newSongs","userEmail","publishedDate","listens","likers","dislikers","comments","name","songs","ownerEmail","ownerUsername","deletePlaylistById","id","delete","getPlaylistById","getPlaylistPairs","getPlaylists","updatePlaylistById","playlist","put","CreateSong_Transaction","initStore","initIndex","initSong","store","index","song","createSong","removeSong","jsTPS_Transaction","MoveSong_Transaction","initOldSongIndex","initNewSongIndex","oldSongIndex","newSongIndex","moveSong","RemoveSong_Transaction","UpdateSong_Transaction","initOldSongData","initNewSongData","oldSongData","newSongData","updateSong","GlobalStoreContext","GlobalStoreActionType","tps","CurrentModal","GlobalStoreContextProvider","currentModal","pageView","idNamePairs","currentList","currentSongIndex","currentSong","newListCounter","listNameActive","listIdMarkedForDeletion","listMarkedForDeletion","allPlaylists","filter","setStore","useContext","storeReducer","prevState","pairsArray","string","changeListName","newName","success","updateList","_id","getListPairs","asyncChangeListName","closeCurrentList","clearAllTransactions","createNewList","asyncCreateNewList","newList","loadIdNamePairs","asyncLoadIdNamePairs","getAllPlaylists","allLists","playlists","asyncGetAllPlaylists","markListForDeletion","getListToDelete","deleteList","processDelete","deleteMarkedList","hideModals","unmarkListForDeletion","showEditSongModal","songIndex","songToEdit","showRemoveSongModal","songToRemove","isDeleteListModalOpen","isEditSongModalOpen","isRemoveSongModalOpen","setCurrentList","asyncSetCurrentList","publishPlaylist","list","Date","asyncPublishList","duplicatePlaylist","asyncDuplicatePlaylist","getPlaylistSize","addNewSong","addCreateSongTransaction","updateCurrentList","start","end","temp","songData","title","artist","youTubeId","playlistSize","addTransaction","addMoveSongTransaction","addRemoveSongTransaction","addUpdateSongTransaction","asyncUpdateCurrentList","undo","redo","canAddNewSong","canUndo","canRedo","canClose","setIsListNameEditActive","addComment","newCommentBody","newComment","body","owner","postedDate","incrementListens","asyncIncrementListens","changePageView","pageType","changeFilter","keyWord","sortPlaylists","propType","sort","a","b","localeCompare","undefined","sensitivity","createdAt","updatedAt","AppBanner","anchorEl","setAnchorEl","isMenuOpen","Boolean","handleProfileMenuOpen","event","currentTarget","handleMenuClose","menuItemStyle","fontFamily","fontWeight","color","menuId","loggedOutMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","style","href","loggedInMenu","sx","menu","Box","flexGrow","AppBar","position","Toolbar","backgroundColor","Typography","variant","noWrap","component","display","xs","sm","textDecoration","fontSize","to","md","IconButton","size","edge","userInitials","getAccountMenu","NavBar","handleChangeView","viewType","handleSort","sortType","inputPropsStyle","sortItemStyle","sortMenuItems","Stack","direction","spacing","Tooltip","placement","disabled","ml","TextField","inputProps","InputLabelProps","onKeyUp","code","target","handleKeyPress","background","width","label","top","left","transform","bgcolor","border","boxShadow","p","MUIDeleteModal","buttonStyle","margin","Modal","className","Button","Statusbar","statusbar","SongCard","songCardButton","onDragStart","dataTransfer","setData","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","targetIndex","sourceIndex","Number","getData","draggable","marginTop","float","EditToolbar","ListCard","editActive","setEditActive","setText","published","isExpanded","isHome","toggleEdit","newActive","handleDeleteList","handleDuplicateList","cardContent","CardContent","List","map","cardElement","Card","CardHeader","subheader","stopPropagation","titleTypographyProps","subheaderTypographyProps","deleteButton","date","toDateString","numListens","borderRadius","ListItem","marginRight","justifyContent","includes","indexOf","ThumbUpOutlined","paddingTop","ThumbDownOutlined","marginLeft","fontStyle","required","fullWidth","autoComplete","onKeyPress","substring","onChange","defaultValue","autoFocus","AllScreen","expand","setExpanded","pair","toLowerCase","overflowY","Accordion","expanded","AccordionSummary","panel","AccordionDetails","UserScreen","borderColor","borderWidth","borderStyle","MUIEditSongModal","setTitle","setArtist","setYouTubeId","MUIRemoveSongModal","songTitle","WorkspaceScreen","modalJSX","PlaylisterYoutubePlayer","currentPlayer","setCurrentPlayer","setCurrentSongIndex","currentSongPlaying","setCurrentSongPlaying","loadAndPlayCurrentSong","player","loadVideoById","playVideo","incSong","handleStartPlaying","currentSongStyle","textAlign","songPlayerButtons","playerButtons","alignItems","FastRewind","Stop","pauseVideo","PlayArrow","FastForward","currentSongText","youtube","videoId","opts","height","playerVars","autoplay","onReady","onStateChange","playerStatus","CommentsBox","commentItems","mb","Fragment","ListItemText","primary","ListItemAvatar","Avatar","alt","toLocaleString","secondary","CssBaseline","Paper","square","HomeScreen","playerComment","setPlayerComment","commentValue","setCommentValue","listCard","youtubePlayer","playerCommentBox","mt","SplashScreen","Container","maxWidth","flexDirection","padding","GuestScreen","HomeWrapper","Copyright","align","Link","getFullYear","LoginScreen","m","noValidate","onSubmit","formData","FormData","Grid","container","item","RegisterScreen","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d46b323a.chunk.js","sourcesContent":["/*\r\n    This is our http api for all things auth, which we use to \r\n    send authorization requests to our back-end API. Note we`re \r\n    using the Axios library for doing this, which is an easy to \r\n    use AJAX-based library. We could (and maybe should) use Fetch, \r\n    which is a native (to browsers) standard, but Axios is easier\r\n    to use when sending JSON back and forth and it`s a Promise-\r\n    based API which helps a lot with asynchronous communication.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\n\r\nimport axios from 'axios'\r\naxios.defaults.withCredentials = true;\r\nconst api = axios.create({\r\n    baseURL: 'https://playlister-project.herokuapp.com/auth',\r\n})\r\n\r\n// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\r\n// REQUEST METHOD (like get) AND PATH (like /register). SOME ALSO\r\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\r\n// WORK, AND SOME REQUIRE DATA, WHICH WE WE WILL FORMAT HERE, FOR WHEN\r\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\r\n// CUSTOM FILTERS FOR QUERIES\r\n\r\nexport const getLoggedIn = () => api.get(`/loggedIn/`);\r\nexport const loginUser = (email, password) => {\r\n    return api.post(`/login/`, {\r\n        email : email,\r\n        password : password\r\n    })\r\n}\r\nexport const logoutUser = () => api.get(`/logout/`)\r\nexport const registerUser = (username, email, firstName, lastName, password, passwordVerify) => {\r\n    return api.post(`/register/`, {\r\n        username: username,\r\n        email: email,\r\n        firstName : firstName,\r\n        lastName : lastName,\r\n        password : password,\r\n        passwordVerify : passwordVerify\r\n    })\r\n}\r\nconst apis = {\r\n    getLoggedIn,\r\n    registerUser,\r\n    loginUser,\r\n    logoutUser\r\n}\r\n\r\nexport default apis\r\n","import React, { createContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport api from './auth-request-api'\r\n\r\nconst AuthContext = createContext();\r\nconsole.log(\"create AuthContext: \" + AuthContext);\r\n\r\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\r\nexport const AuthActionType = {\r\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\r\n    SET_LOGGED_IN: \"SET_LOGGED_IN\",\r\n    LOGIN_USER: \"LOGIN_USER\",\r\n    LOGOUT_USER: \"LOGOUT_USER\",\r\n    REGISTER_USER: \"REGISTER_USER\",\r\n    SHOW_AUTH_MODALS: \"SHOW_AUTH_MODALS\",\r\n    HIDE_AUTH_MODALS: \"HIDE_AUTH_MODALS\",\r\n    GUEST_USER: \"GUEST_USER\"\r\n}\r\n\r\nfunction AuthContextProvider(props) {\r\n    const [auth, setAuth] = useState({\r\n        user: null,\r\n        loggedIn: false,\r\n        modalMsg: false,\r\n        modalVisible: false,\r\n        isGuest: false\r\n    });\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        auth.getLoggedIn();\r\n    }, []);\r\n\r\n    const authReducer = (action) => {\r\n        const { type, payload } = action;\r\n        switch (type) {\r\n            case AuthActionType.GET_LOGGED_IN: {\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: payload.loggedIn,\r\n                    modalMsg: false,\r\n                    modalVisible: false,\r\n                    isGuest: false\r\n                });\r\n            }\r\n            case AuthActionType.LOGIN_USER: {\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: true,\r\n                    modalMsg: false,\r\n                    modalVisible: false,\r\n                    isGuest: false\r\n                })\r\n            }\r\n            case AuthActionType.LOGOUT_USER: {\r\n                return setAuth({\r\n                    user: null,\r\n                    loggedIn: false,\r\n                    modalMsg: false,\r\n                    modalVisible: false,\r\n                    isGuest: false\r\n                })\r\n            }\r\n            case AuthActionType.REGISTER_USER: {\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: true,\r\n                    modalMsg: false,\r\n                    modalVisible: false,\r\n                    isGuest: false\r\n                })\r\n            }\r\n            case AuthActionType.SET_LOGGED_IN: {\r\n                return setAuth({\r\n                    user: payload.user,\r\n                    loggedIn: true,\r\n                    modalMsg: false,\r\n                    modalVisible: false,\r\n                    isGuest: false\r\n                })\r\n            }\r\n            case AuthActionType.SHOW_AUTH_MODALS: {\r\n                return setAuth({\r\n                    user: null,\r\n                    loggedIn: true,\r\n                    modalMsg: payload.modalMsg,\r\n                    modalVisible: true,\r\n                    isGuest: false\r\n                })\r\n            }\r\n            case AuthActionType.HIDE_AUTH_MODALS: {\r\n                return setAuth({\r\n                    user: null,\r\n                    loggedIn: true,\r\n                    modalMsg: null,\r\n                    modalVisible: false,\r\n                    isGuest: false\r\n                })\r\n            }\r\n            case AuthActionType.GUEST_USER: {\r\n                return setAuth({\r\n                    user: null,\r\n                    loggedIn: false,\r\n                    modalMsg: false,\r\n                    modalVisible: false,\r\n                    isGuest: payload\r\n                })\r\n            }\r\n            default:\r\n                return auth;\r\n        }\r\n    }\r\n\r\n    auth.getLoggedIn = async function () {\r\n        const response = await api.getLoggedIn();\r\n        if (response.status === 200) {\r\n            authReducer({\r\n                type: AuthActionType.SET_LOGGED_IN,\r\n                payload: {\r\n                    loggedIn: response.data.loggedIn,\r\n                    user: response.data.user\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    auth.registerUser = async function(username, email, firstName, lastName, password, passwordVerify) {\r\n        try {\r\n            const response = await api.registerUser(username, email, firstName, lastName, password, passwordVerify);      \r\n            if (response.status === 200) {\r\n                authReducer({\r\n                    type: AuthActionType.REGISTER_USER,\r\n                    payload: {\r\n                        user: response.data.user\r\n                    }\r\n                })\r\n                history.push(\"/\");\r\n            }\r\n        }   \r\n        catch (error) {\r\n            console.log(error.response);\r\n            authReducer({\r\n                type: AuthActionType.SHOW_AUTH_MODALS,\r\n                payload: {\r\n                    modalMsg: error.response.data.errorMessage\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    auth.loginUser = async function(email, password) {\r\n        try {\r\n            const response = await api.loginUser(email, password);\r\n            if (response.status === 200) {\r\n                authReducer({\r\n                    type: AuthActionType.LOGIN_USER,\r\n                    payload: {\r\n                        user: response.data.user\r\n                    }\r\n                })\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log(error.response);\r\n            authReducer({\r\n                type: AuthActionType.SHOW_AUTH_MODALS,\r\n                payload: {\r\n                    modalMsg: error.response.data.errorMessage\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    auth.logoutUser = async function() {\r\n        const response = await api.logoutUser();\r\n        if (response.status === 200) {\r\n            authReducer( {\r\n                type: AuthActionType.LOGOUT_USER,\r\n                payload: null\r\n            })\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    auth.getUserInitials = function() {\r\n        let initials = \"\";\r\n        if (auth.user) {\r\n            initials += auth.user.firstName.charAt(0);\r\n            initials += auth.user.lastName.charAt(0);\r\n        }\r\n        console.log(\"user initials: \" + initials);\r\n        return initials;\r\n    }\r\n\r\n    auth.hideModal = function() {\r\n        authReducer( {\r\n            type: AuthActionType.HIDE_AUTH_MODALS\r\n        })\r\n    }\r\n\r\n    auth.guestUser = function(guestValue) {\r\n        authReducer( {\r\n            type: AuthActionType.GUEST_USER,\r\n            payload: guestValue\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            auth\r\n        }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContext;\r\nexport { AuthContextProvider };","/**\r\n * jsTPS_Transaction\r\n * \r\n * This provides the basic structure for a transaction class. Note to use\r\n * jsTPS one should create objects that define these two methods, doTransaction\r\n * and undoTransaction, which will update the application state accordingly.\r\n * \r\n * @author THE McKilla Gorilla (accept no imposters)\r\n * @version 1.0\r\n */\r\nexport class jsTPS_Transaction {\r\n    /**\r\n     * This method is called by jTPS when a transaction is executed.\r\n     */\r\n    doTransaction() {\r\n        console.log(\"doTransaction - MISSING IMPLEMENTATION\");\r\n    }\r\n    \r\n    /**\r\n     * This method is called by jTPS when a transaction is undone.\r\n     */\r\n    undoTransaction() {\r\n        console.log(\"undoTransaction - MISSING IMPLEMENTATION\");\r\n    }\r\n}\r\n\r\n/**\r\n * jsTPS\r\n * \r\n * This class serves as the Transaction Processing System. Note that it manages\r\n * a stack of jsTPS_Transaction objects, each of which know how to do or undo\r\n * state changes for the given application. Note that this TPS is not platform\r\n * specific as it is programmed in raw JavaScript.\r\n */\r\nexport default class jsTPS {\r\n    constructor() {\r\n        // THE TRANSACTION STACK\r\n        this.transactions = [];\r\n\r\n        // THE TOTAL NUMBER OF TRANSACTIONS ON THE STACK,\r\n        // INCLUDING THOSE THAT MAY HAVE ALREADY BEEN UNDONE\r\n        this.numTransactions = 0;\r\n\r\n        // THE INDEX OF THE MOST RECENT TRANSACTION, NOTE THAT\r\n        // THIS MAY BE IN THE MIDDLE OF THE TRANSACTION STACK\r\n        // IF SOME TRANSACTIONS ON THE STACK HAVE BEEN UNDONE\r\n        // AND STILL COULD BE REDONE.\r\n        this.mostRecentTransaction = -1;\r\n\r\n        // THESE STATE VARIABLES ARE TURNED ON AND OFF WHILE\r\n        // TRANSACTIONS ARE DOING THEIR WORK SO AS TO HELP\r\n        // MANAGE CONCURRENT UPDATES\r\n        this.performingDo = false;\r\n        this.performingUndo = false;\r\n    }\r\n\r\n    /**\r\n     * isPerformingDo\r\n     * \r\n     * Accessor method for getting a boolean representing whether or not\r\n     * a transaction is currently in the midst of a do/redo operation.\r\n     */\r\n    isPerformingDo() {\r\n        return this.performingDo;\r\n    }\r\n\r\n    /**\r\n     * isPerformingUndo\r\n     * \r\n     * Accessor method for getting a boolean representing whether or not\r\n     * a transaction is currently in the midst of an undo operation.\r\n     */\r\n    isPerformingUndo() {\r\n        return this.performingUndo;\r\n    }\r\n\r\n    /**\r\n     * getSize\r\n     * \r\n     * Accessor method for getting the number of transactions on the stack.\r\n     */\r\n    getSize() {\r\n        return this.transactions.length;\r\n    }\r\n\r\n    /**\r\n     * getRedoSize\r\n     * \r\n     * Method for getting the total number of transactions on the stack\r\n     * that can possibly be redone.\r\n     */\r\n    getRedoSize() {\r\n        return this.getSize() - this.mostRecentTransaction - 1;\r\n    }\r\n\r\n    /**\r\n     * getUndoSize\r\n     * \r\n     * Method for getting the total number of transactions on the stack\r\n     * that can possible be undone.\r\n     */\r\n    getUndoSize() {\r\n        return this.mostRecentTransaction + 1;\r\n    }\r\n\r\n    /**\r\n     * hasTransactionToRedo\r\n     * \r\n     * Method for getting a boolean representing whether or not\r\n     * there are transactions on the stack that can be redone.\r\n     */\r\n    hasTransactionToRedo() {\r\n        return (this.mostRecentTransaction+1) < this.numTransactions;\r\n    }\r\n\r\n    /**\r\n     * hasTransactionToUndo\r\n     * \r\n     * Method for getting a boolean representing whehter or not\r\n     * there are transactions on the stack that can be undone.\r\n     */\r\n    hasTransactionToUndo() {\r\n        return this.mostRecentTransaction >= 0;\r\n    }\r\n\r\n    /**\r\n     * addTransaction\r\n     * \r\n     * Method for adding a transaction to the TPS stack, note it\r\n     * also then does the transaction.\r\n     * \r\n     * @param {jsTPS_Transaction} transaction Transaction to add to the stack and do.\r\n     */\r\n    addTransaction(transaction) {\r\n        // ARE WE BRANCHING?\r\n        if ((this.mostRecentTransaction < 0) \r\n            || (this.mostRecentTransaction < (this.transactions.length - 1))) {\r\n                for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\r\n                    this.transactions.splice(i, 1);\r\n                }\r\n                this.numTransactions = this.mostRecentTransaction + 2;\r\n        }\r\n        else {\r\n            this.numTransactions++;\r\n        }\r\n\r\n        // ADD THE TRANSACTION\r\n        this.transactions[this.mostRecentTransaction+1] = transaction;\r\n\r\n        // AND EXECUTE IT\r\n        this.doTransaction();\r\n    }\r\n\r\n    /**\r\n     * doTransaction\r\n     * \r\n     * Does the current transaction on the stack and advances the transaction\r\n     * counter. Note this function may be invoked as a result of either adding\r\n     * a transaction (which also does it), or redoing a transaction.\r\n     */\r\n    doTransaction() {\r\n        if (this.hasTransactionToRedo()) {\r\n            this.performingDo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction+1];\r\n            transaction.doTransaction();\r\n            this.mostRecentTransaction++;\r\n            this.performingDo = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This function gets the most recently executed transaction on the \r\n     * TPS stack and undoes it, moving the TPS counter accordingly.\r\n     */\r\n    undoTransaction() {\r\n        if (this.hasTransactionToUndo()) {\r\n            this.performingUndo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction];\r\n            transaction.undoTransaction();\r\n            this.mostRecentTransaction--;\r\n            this.performingUndo = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * clearAllTransactions\r\n     * \r\n     * Removes all the transactions from the TPS, leaving it with none.\r\n     */\r\n    clearAllTransactions() {\r\n        // REMOVE ALL THE TRANSACTIONS\r\n        this.transactions = [];\r\n        \r\n        // MAKE SURE TO RESET THE LOCATION OF THE\r\n        // TOP OF THE TPS STACK TOO\r\n        this.mostRecentTransaction = -1;      \r\n        this.numTransactions = 0; \r\n    }\r\n\r\n    /**\r\n     * toString\r\n     * \r\n     * Builds and returns a textual represention of the full TPS and its stack.\r\n     */\r\n    toString() {        \r\n        let text = \"--Number of Transactions: \" + this.numTransactions + \"\\n\";\r\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\r\n        text += \"--Current Transaction Stack:\\n\";\r\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\r\n            let jT = this.transactions[i];\r\n            text += \"----\" + jT.toString() + \"\\n\";\r\n        }\r\n        return text;        \r\n    }\r\n}","/*\r\n    This is our http api, which we use to send requests to\r\n    our back-end API. Note we`re using the Axios library\r\n    for doing this, which is an easy to use AJAX-based\r\n    library. We could (and maybe should) use Fetch, which\r\n    is a native (to browsers) standard, but Axios is easier\r\n    to use when sending JSON back and forth and it`s a Promise-\r\n    based API which helps a lot with asynchronous communication.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\n\r\nimport axios from 'axios'\r\naxios.defaults.withCredentials = true;\r\nconst api = axios.create({\r\n    baseURL: 'https://playlister-project.herokuapp.com/api/',\r\n})\r\n\r\n// THESE ARE ALL THE REQUESTS WE`LL BE MAKING, ALL REQUESTS HAVE A\r\n// REQUEST METHOD (like get) AND PATH (like /top5list). SOME ALSO\r\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\r\n// WORK, AND SOME REQUIRE DATA, WHICH WE WE WILL FORMAT HERE, FOR WHEN\r\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\r\n// CUSTOM FILTERS FOR QUERIES\r\nexport const createPlaylist = (newListName, newSongs, userEmail, username, publishedDate, listens, likers, dislikers, comments) => {\r\n    return api.post(`/playlist/`, {\r\n        // SPECIFY THE PAYLOAD\r\n        name: newListName,\r\n        songs: newSongs,\r\n        ownerEmail: userEmail,\r\n        ownerUsername: username,\r\n        publishedDate: publishedDate,\r\n        listens: listens,\r\n        likers: likers,\r\n        dislikers: dislikers,\r\n        comments: comments\r\n    })\r\n}\r\nexport const deletePlaylistById = (id) => api.delete(`/playlist/${id}`)\r\nexport const getPlaylistById = (id) => api.get(`/playlist/${id}`)\r\nexport const getPlaylistPairs = () => api.get(`/playlistpairs/`)\r\nexport const getPlaylists = () => api.get(`/playlists/`)\r\nexport const updatePlaylistById = (id, playlist) => {\r\n    return api.put(`/playlist/${id}`, {\r\n        // SPECIFY THE PAYLOAD\r\n        playlist: playlist\r\n    })\r\n}\r\n\r\nconst apis = {\r\n    createPlaylist,\r\n    deletePlaylistById,\r\n    getPlaylistById,\r\n    getPlaylistPairs,\r\n    getPlaylists,\r\n    updatePlaylistById\r\n}\r\n\r\nexport default apis\r\n","import jsTPS_Transaction from \"../common/jsTPS.js\"\r\n/**\r\n * CreateSong_Transaction\r\n * \r\n * This class represents a transaction that creates a song\r\n * in the playlist. It will be managed by the transaction stack.\r\n * \r\n * @author McKilla Gorilla\r\n * @author ?\r\n */\r\nexport default class CreateSong_Transaction extends jsTPS_Transaction {\r\n    constructor(initStore, initIndex, initSong) {\r\n        super();\r\n        this.store = initStore;\r\n        this.index = initIndex;\r\n        this.song = initSong;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.store.createSong(this.index, this.song);\r\n    }\r\n    \r\n    undoTransaction() {\r\n        this.store.removeSong(this.index);\r\n    }\r\n}","import jsTPS_Transaction from \"../common/jsTPS.js\"\r\n/**\r\n * MoveSong_Transaction\r\n * \r\n * This class represents a transaction that works with drag\r\n * and drop. It will be managed by the transaction stack.\r\n * \r\n * @author McKilla Gorilla\r\n * @author ?\r\n */\r\nexport default class MoveSong_Transaction extends jsTPS_Transaction {\r\n    constructor(initStore, initOldSongIndex, initNewSongIndex) {\r\n        super();\r\n        this.store = initStore;\r\n        this.oldSongIndex = initOldSongIndex;\r\n        this.newSongIndex = initNewSongIndex;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.store.moveSong(this.oldSongIndex, this.newSongIndex);\r\n    }\r\n    \r\n    undoTransaction() {\r\n        this.store.moveSong(this.newSongIndex, this.oldSongIndex);\r\n    }\r\n}","import jsTPS_Transaction from \"../common/jsTPS.js\"\r\n\r\n/**\r\n * DeleteSong_Transaction\r\n * \r\n * This class represents a transaction that deletes a song\r\n * in the playlist. It will be managed by the transaction stack.\r\n * \r\n * @author McKilla Gorilla\r\n * @author ?\r\n */\r\nexport default class RemoveSong_Transaction extends jsTPS_Transaction {\r\n    constructor(initStore, initIndex, initSong) {\r\n        super();\r\n        this.store = initStore;\r\n        this.index = initIndex;\r\n        this.song = initSong;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.store.removeSong(this.index);\r\n    }\r\n    \r\n    undoTransaction() {\r\n        this.store.createSong(this.index, this.song);\r\n    }\r\n}","import jsTPS_Transaction from \"../common/jsTPS.js\"\r\n\r\n/**\r\n * UpdateSong_Transaction\r\n * \r\n * This class represents a transaction that updates a song\r\n * in the playlist. It will be managed by the transaction stack.\r\n * \r\n * @author McKilla Gorilla\r\n * @author ?\r\n */\r\nexport default class UpdateSong_Transaction extends jsTPS_Transaction {\r\n    constructor(initStore, initIndex, initOldSongData, initNewSongData) {\r\n        super();\r\n        this.store = initStore;\r\n        this.index = initIndex;\r\n        this.oldSongData = initOldSongData;\r\n        this.newSongData = initNewSongData;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.store.updateSong(this.index, this.newSongData);\r\n    }\r\n    \r\n    undoTransaction() {\r\n        this.store.updateSong(this.index, this.oldSongData);\r\n    }\r\n}","import { createContext, useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport jsTPS from '../common/jsTPS'\r\nimport api from './store-request-api'\r\nimport CreateSong_Transaction from '../transactions/CreateSong_Transaction'\r\nimport MoveSong_Transaction from '../transactions/MoveSong_Transaction'\r\nimport RemoveSong_Transaction from '../transactions/RemoveSong_Transaction'\r\nimport UpdateSong_Transaction from '../transactions/UpdateSong_Transaction'\r\nimport AuthContext from '../auth'\r\n/*\r\n    This is our global data store. Note that it uses the Flux design pattern,\r\n    which makes use of things like actions and reducers. \r\n    \r\n    @author McKilla Gorilla\r\n*/\r\n\r\n// THIS IS THE CONTEXT WE'LL USE TO SHARE OUR STORE\r\nexport const GlobalStoreContext = createContext({});\r\nconsole.log(\"create GlobalStoreContext\");\r\n\r\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR GLOBAL\r\n// DATA STORE STATE THAT CAN BE PROCESSED\r\nexport const GlobalStoreActionType = {\r\n    CHANGE_LIST_NAME: \"CHANGE_LIST_NAME\",\r\n    CLOSE_CURRENT_LIST: \"CLOSE_CURRENT_LIST\",\r\n    CREATE_NEW_LIST: \"CREATE_NEW_LIST\",\r\n    LOAD_ID_NAME_PAIRS: \"LOAD_ID_NAME_PAIRS\",\r\n    MARK_LIST_FOR_DELETION: \"MARK_LIST_FOR_DELETION\",\r\n    UNMARK_LIST_FOR_DELETION: \"UNMARK_LIST_FOR_DELETION\",\r\n    SET_CURRENT_LIST: \"SET_CURRENT_LIST\",\r\n    SET_LIST_NAME_EDIT_ACTIVE: \"SET_LIST_NAME_EDIT_ACTIVE\",\r\n    EDIT_SONG: \"EDIT_SONG\",\r\n    REMOVE_SONG: \"REMOVE_SONG\",\r\n    HIDE_MODALS: \"HIDE_MODALS\",\r\n    SET_PAGE_VIEW: \"SET_PAGE_VIEW\",\r\n    GET_ALL_PLAYLISTS: \"GET_ALL_PLAYLISTS\",\r\n    SORT_PLAYLISTS: \"SORT_PLAYLISTS\",\r\n    CHANGE_FILTER: \"CHANGE_FILTER\",\r\n}\r\n\r\n// WE'LL NEED THIS TO PROCESS TRANSACTIONS\r\nconst tps = new jsTPS();\r\n\r\nconst CurrentModal = {\r\n    NONE : \"NONE\",\r\n    DELETE_LIST : \"DELETE_LIST\",\r\n    EDIT_SONG : \"EDIT_SONG\",\r\n    REMOVE_SONG : \"REMOVE_SONG\"\r\n}\r\n\r\n// WITH THIS WE'RE MAKING OUR GLOBAL DATA STORE\r\n// AVAILABLE TO THE REST OF THE APPLICATION\r\nfunction GlobalStoreContextProvider(props) {\r\n    // THESE ARE ALL THE THINGS OUR DATA STORE WILL MANAGE\r\n    const [store, setStore] = useState({\r\n        currentModal : CurrentModal.NONE,\r\n        pageView: \"HOME\",\r\n        idNamePairs: [],\r\n        currentList: null,\r\n        currentSongIndex : -1,\r\n        currentSong : null,\r\n        newListCounter: 0,\r\n        listNameActive: false,\r\n        listIdMarkedForDeletion: null,\r\n        listMarkedForDeletion: null,\r\n        allPlaylists: null,\r\n        filter: \"\",\r\n    });\r\n    const history = useHistory();\r\n\r\n    console.log(\"inside useGlobalStore\");\r\n\r\n    // SINCE WE'VE WRAPPED THE STORE IN THE AUTH CONTEXT WE CAN ACCESS THE USER HERE\r\n    const { auth } = useContext(AuthContext);\r\n    console.log(\"auth: \" + auth);\r\n\r\n    // HERE'S THE DATA STORE'S REDUCER, IT MUST\r\n    // HANDLE EVERY TYPE OF STATE CHANGE\r\n    const storeReducer = (action) => {\r\n        const { type, payload } = action;\r\n        switch (type) {\r\n            // LIST UPDATE OF ITS NAME\r\n            case GlobalStoreActionType.CHANGE_LIST_NAME: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.NONE,\r\n                    idNamePairs: payload.idNamePairs,\r\n                    currentList: payload.playlist,\r\n                    currentSongIndex: -1,\r\n                    currentSong: null,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                    filter: \"\",\r\n                }));\r\n            }\r\n            // STOP EDITING THE CURRENT LIST\r\n            case GlobalStoreActionType.CLOSE_CURRENT_LIST: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.NONE,\r\n                    currentList: null,\r\n                    currentSongIndex: -1,\r\n                    currentSong: null,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                }));\r\n            }\r\n            // CREATE A NEW LIST\r\n            case GlobalStoreActionType.CREATE_NEW_LIST: {                \r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.NONE,\r\n                    currentList: payload,\r\n                    currentSongIndex: -1,\r\n                    currentSong: null,\r\n                    newListCounter: store.newListCounter + 1,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                    filter: \"\",\r\n                }));\r\n            }\r\n            // GET ALL THE LISTS SO WE CAN PRESENT THEM\r\n            case GlobalStoreActionType.LOAD_ID_NAME_PAIRS: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.NONE,\r\n                    idNamePairs: payload.pairsArray,\r\n                    currentSongIndex: -1,\r\n                    currentSong: null,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                }));\r\n            }\r\n            // PREPARE TO DELETE A LIST\r\n            case GlobalStoreActionType.MARK_LIST_FOR_DELETION: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.DELETE_LIST,\r\n                    currentList: store.currentList,\r\n                    currentSongIndex: -1,\r\n                    currentSong: null,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: payload.id,\r\n                    listMarkedForDeletion: payload.playlist,\r\n                }));\r\n            }\r\n            case GlobalStoreActionType.UNMARK_LIST_FOR_DELETION: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : null,\r\n                    currentSongIndex: -1,\r\n                    currentSong: null,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                    allPlaylists: store.allPlaylists,\r\n                }));\r\n            }\r\n            // UPDATE A LIST\r\n            case GlobalStoreActionType.SET_CURRENT_LIST: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentList: payload,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                }));\r\n            }\r\n            // START EDITING A LIST NAME\r\n            case GlobalStoreActionType.SET_LIST_NAME_EDIT_ACTIVE: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.NONE,\r\n                    currentList: payload,\r\n                    currentSongIndex: -1,\r\n                    currentSong: null,\r\n                    listNameActive: true,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                }));\r\n            }\r\n            // \r\n            case GlobalStoreActionType.EDIT_SONG: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.EDIT_SONG,\r\n                    currentSongIndex: payload.currentSongIndex,\r\n                    currentSong: payload.currentSong,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                }));\r\n            }\r\n            case GlobalStoreActionType.REMOVE_SONG: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.REMOVE_SONG,\r\n                    currentSongIndex: payload.currentSongIndex,\r\n                    currentSong: payload.currentSong,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                }));\r\n            }\r\n            case GlobalStoreActionType.HIDE_MODALS: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.NONE,\r\n                    currentSongIndex: -1,\r\n                    currentSong: null,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                }));\r\n            }\r\n            case GlobalStoreActionType.SET_PAGE_VIEW: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    pageView: payload,\r\n                    currentList: null,\r\n                    filter: \"\",\r\n                }));\r\n            }\r\n            case GlobalStoreActionType.GET_ALL_PLAYLISTS: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    allPlaylists: payload,\r\n                }));\r\n            }\r\n            // GET ALL THE LISTS SO WE CAN PRESENT THEM\r\n            case GlobalStoreActionType.SORT_PLAYLISTS: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.NONE,\r\n                    currentList: null,\r\n                    currentSongIndex: -1,\r\n                    currentSong: null,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                    allPlaylists: payload.allPlaylists,\r\n                    idNamePairs: payload.pairsArray,\r\n                    pageView: payload.pageView,\r\n                }));\r\n            }\r\n            // GET ALL THE LISTS SO WE CAN PRESENT THEM\r\n            case GlobalStoreActionType.CHANGE_FILTER: {\r\n                return setStore((prevState) => ({\r\n                    ...prevState,\r\n                    currentModal : CurrentModal.NONE,\r\n                    currentList: null,\r\n                    currentSongIndex: -1,\r\n                    currentSong: null,\r\n                    listNameActive: false,\r\n                    listIdMarkedForDeletion: null,\r\n                    listMarkedForDeletion: null,\r\n                    pageView: payload.pageView,\r\n                    filter: payload.string,\r\n                }));\r\n            }\r\n            default:\r\n                return store;\r\n        }\r\n    }\r\n\r\n    // THESE ARE THE FUNCTIONS THAT WILL UPDATE OUR STORE AND\r\n    // DRIVE THE STATE OF THE APPLICATION. WE'LL CALL THESE IN \r\n    // RESPONSE TO EVENTS INSIDE OUR COMPONENTS.\r\n\r\n    // THIS FUNCTION PROCESSES CHANGING A LIST NAME\r\n    store.changeListName = function (id, newName) {\r\n        // GET THE LIST\r\n        async function asyncChangeListName(id) {\r\n            let response = await api.getPlaylistById(id);\r\n            if (response.data.success) {\r\n                let playlist = response.data.playlist;\r\n                playlist.name = newName;\r\n                async function updateList(playlist) {\r\n                    response = await api.updatePlaylistById(playlist._id, playlist);\r\n                    if (response.data.success) {\r\n                        async function getListPairs(playlist) {\r\n                            response = await api.getPlaylistPairs();\r\n                            if (response.data.success) {\r\n                                let pairsArray = response.data.idNamePairs;\r\n                                storeReducer({\r\n                                    type: GlobalStoreActionType.CHANGE_LIST_NAME,\r\n                                    payload: {\r\n                                        idNamePairs: pairsArray,\r\n                                        playlist: playlist\r\n                                    }\r\n                                });\r\n                                history.push(\"/\");\r\n                            }\r\n                        }\r\n                        getListPairs(playlist);\r\n                    }\r\n                }\r\n                updateList(playlist);\r\n            }\r\n        }\r\n        asyncChangeListName(id);\r\n    }\r\n\r\n    // THIS FUNCTION PROCESSES CLOSING THE CURRENTLY LOADED LIST\r\n    store.closeCurrentList = function () {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.CLOSE_CURRENT_LIST,\r\n            payload: {}\r\n        });\r\n        tps.clearAllTransactions();\r\n\r\n        history.push(\"/\");\r\n    }\r\n\r\n    // THIS FUNCTION CREATES A NEW LIST\r\n    store.createNewList = async function () {\r\n        async function asyncCreateNewList() {\r\n            let newListName = \"Untitled\" + store.newListCounter;\r\n            const response = await api.createPlaylist(newListName, [], auth.user.email, auth.user.username, null, 0, [], [], []);\r\n            console.log(\"createNewList response: \" + response);\r\n            if (response.status === 201) {\r\n                tps.clearAllTransactions();\r\n                let newList = response.data.playlist;\r\n                storeReducer({\r\n                    type: GlobalStoreActionType.CREATE_NEW_LIST,\r\n                    payload: newList\r\n                }\r\n                );\r\n\r\n                // IF IT'S A VALID LIST THEN LET'S START EDITING IT\r\n                store.loadIdNamePairs();\r\n                history.push(\"/\");\r\n            }\r\n            else {\r\n                console.log(\"API FAILED TO CREATE A NEW LIST\");\r\n            }\r\n        }\r\n        asyncCreateNewList();\r\n    }\r\n\r\n    // THIS FUNCTION LOADS ALL THE ID, NAME PAIRS SO WE CAN LIST ALL THE LISTS\r\n    store.loadIdNamePairs = function () {\r\n        async function asyncLoadIdNamePairs() {\r\n            let response = await api.getPlaylistPairs();\r\n            if (response.data.success) {\r\n                let pairsArray = response.data.idNamePairs;\r\n                if (response.data.success) {\r\n                    storeReducer({\r\n                        type: GlobalStoreActionType.LOAD_ID_NAME_PAIRS,\r\n                        payload: { pairsArray: pairsArray }\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                console.log(\"API FAILED TO GET THE LIST PAIRS\");\r\n            }\r\n        }\r\n        asyncLoadIdNamePairs();\r\n    }\r\n\r\n    store.getAllPlaylists = function () {\r\n        async function asyncGetAllPlaylists() {\r\n            let response = await api.getPlaylists();\r\n            if (response.data.success) {\r\n                let allLists = response.data.playlists;\r\n                storeReducer({\r\n                    type: GlobalStoreActionType.GET_ALL_PLAYLISTS,\r\n                    payload: allLists\r\n                });\r\n            }\r\n            else {\r\n                console.log(\"API FAILED TO GET THE LIST PAIRS\");\r\n            }\r\n        }\r\n        asyncGetAllPlaylists();\r\n    }\r\n\r\n    // THE FOLLOWING 5 FUNCTIONS ARE FOR COORDINATING THE DELETION\r\n    // OF A LIST, WHICH INCLUDES USING A VERIFICATION MODAL. THE\r\n    // FUNCTIONS ARE markListForDeletion, deleteList, deleteMarkedList,\r\n    // showDeleteListModal, and hideDeleteListModal\r\n    store.markListForDeletion = function (id) {\r\n        async function getListToDelete(id) {\r\n            let response = await api.getPlaylistById(id);\r\n            if (response.data.success) {\r\n                let playlist = response.data.playlist;\r\n                storeReducer({\r\n                    type: GlobalStoreActionType.MARK_LIST_FOR_DELETION,\r\n                    payload: {id: id, playlist: playlist}\r\n                });\r\n            }\r\n        }\r\n        getListToDelete(id);\r\n    }\r\n    store.deleteList = async function (id) {\r\n        async function processDelete(id) {\r\n            let response = await api.deletePlaylistById(id);\r\n            if (response.data.success) {\r\n                store.loadIdNamePairs();\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n        await processDelete(id);\r\n    }\r\n    store.deleteMarkedList = function() {\r\n        store.deleteList(store.listIdMarkedForDeletion);\r\n        store.hideModals();\r\n    }\r\n    store.unmarkListForDeletion = function() {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.UNMARK_LIST_FOR_DELETION,\r\n            payload: null\r\n        });\r\n    }\r\n    // THIS FUNCTION SHOWS THE MODAL FOR PROMPTING THE USER\r\n    // TO SEE IF THEY REALLY WANT TO DELETE THE LIST\r\n\r\n    store.showEditSongModal = (songIndex, songToEdit) => {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.EDIT_SONG,\r\n            payload: {currentSongIndex: songIndex, currentSong: songToEdit}\r\n        });        \r\n    }\r\n    store.showRemoveSongModal = (songIndex, songToRemove) => {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.REMOVE_SONG,\r\n            payload: {currentSongIndex: songIndex, currentSong: songToRemove}\r\n        });        \r\n    }\r\n    store.hideModals = () => {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.HIDE_MODALS,\r\n            payload: {}\r\n        });    \r\n    }\r\n    store.isDeleteListModalOpen = () => {\r\n        return store.currentModal === CurrentModal.DELETE_LIST;\r\n    }\r\n    store.isEditSongModalOpen = () => {\r\n        return store.currentModal === CurrentModal.EDIT_SONG;\r\n    }\r\n    store.isRemoveSongModalOpen = () => {\r\n        return store.currentModal === CurrentModal.REMOVE_SONG;\r\n    }\r\n\r\n    // THE FOLLOWING 8 FUNCTIONS ARE FOR COORDINATING THE UPDATING\r\n    // OF A LIST, WHICH INCLUDES DEALING WITH THE TRANSACTION STACK. THE\r\n    // FUNCTIONS ARE setCurrentList, addMoveItemTransaction, addUpdateItemTransaction,\r\n    // moveItem, updateItem, updateCurrentList, undo, and redo\r\n    store.setCurrentList = function (id) {\r\n        async function asyncSetCurrentList(id) {\r\n            let response = await api.getPlaylistById(id);\r\n            if (response.data.success) {\r\n                let playlist = response.data.playlist;\r\n                storeReducer({\r\n                    type: GlobalStoreActionType.SET_CURRENT_LIST,\r\n                    payload: playlist\r\n                });\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n        asyncSetCurrentList(id);\r\n    }\r\n\r\n    store.publishPlaylist = function (list) {     \r\n        list.publishedDate = new Date();\r\n        async function asyncPublishList() {\r\n            const response = await api.updatePlaylistById(list._id, list);\r\n            if (response.data.success) {\r\n                store.loadIdNamePairs();\r\n            }\r\n        }\r\n        asyncPublishList();\r\n    }\r\n\r\n    store.duplicatePlaylist = function (list) {\r\n        async function asyncDuplicatePlaylist() { \r\n            const response = await api.createPlaylist(list.name + \" copy\", list.songs, auth.user.email, auth.user.username, null, 0, [], [], []);\r\n            console.log(\"createNewList response: \" + response);\r\n            if (response.status === 201) {\r\n                tps.clearAllTransactions();\r\n                let newList = response.data.playlist;\r\n                storeReducer({\r\n                    type: GlobalStoreActionType.CREATE_NEW_LIST,\r\n                    payload: newList\r\n                }\r\n                );\r\n\r\n                // IF IT'S A VALID LIST THEN LET'S START EDITING IT\r\n                store.loadIdNamePairs();\r\n            }\r\n        }\r\n        asyncDuplicatePlaylist();\r\n    }\r\n\r\n    store.getPlaylistSize = function() {\r\n        return store.currentList.songs.length;\r\n    }\r\n    store.addNewSong = function() {\r\n        let index = this.getPlaylistSize();\r\n        this.addCreateSongTransaction(index, \"Untitled\", \"?\", \"dQw4w9WgXcQ\");\r\n    }\r\n    // THIS FUNCTION CREATES A NEW SONG IN THE CURRENT LIST\r\n    // USING THE PROVIDED DATA AND PUTS THIS SONG AT INDEX\r\n    store.createSong = function(index, song) {\r\n        let list = store.currentList;      \r\n        list.songs.splice(index, 0, song);\r\n        // NOW MAKE IT OFFICIAL\r\n        store.updateCurrentList(list);\r\n    }\r\n    // THIS FUNCTION MOVES A SONG IN THE CURRENT LIST FROM\r\n    // start TO end AND ADJUSTS ALL OTHER ITEMS ACCORDINGLY\r\n    store.moveSong = function(start, end) {\r\n        let list = store.currentList;\r\n\r\n        // WE NEED TO UPDATE THE STATE FOR THE APP\r\n        if (start < end) {\r\n            let temp = list.songs[start];\r\n            for (let i = start; i < end; i++) {\r\n                list.songs[i] = list.songs[i + 1];\r\n            }\r\n            list.songs[end] = temp;\r\n        }\r\n        else if (start > end) {\r\n            let temp = list.songs[start];\r\n            for (let i = start; i > end; i--) {\r\n                list.songs[i] = list.songs[i - 1];\r\n            }\r\n            list.songs[end] = temp;\r\n        }\r\n\r\n        // NOW MAKE IT OFFICIAL\r\n        store.updateCurrentList(list);\r\n    }\r\n    // THIS FUNCTION REMOVES THE SONG AT THE index LOCATION\r\n    // FROM THE CURRENT LIST\r\n    store.removeSong = function(index) {\r\n        let list = store.currentList;      \r\n        list.songs.splice(index, 1); \r\n\r\n        // NOW MAKE IT OFFICIAL\r\n        store.updateCurrentList(list);\r\n    }\r\n    // THIS FUNCTION UPDATES THE TEXT IN THE ITEM AT index TO text\r\n    store.updateSong = function(index, songData) {\r\n        let list = store.currentList;\r\n        let song = list.songs[index];\r\n        song.title = songData.title;\r\n        song.artist = songData.artist;\r\n        song.youTubeId = songData.youTubeId;\r\n\r\n        // NOW MAKE IT OFFICIAL\r\n        store.updateCurrentList(list);\r\n    }\r\n    store.addNewSong = () => {\r\n        let playlistSize = store.getPlaylistSize();\r\n        store.addCreateSongTransaction(\r\n            playlistSize, \"Untitled\", \"?\", \"dQw4w9WgXcQ\");\r\n    }\r\n    // THIS FUNCDTION ADDS A CreateSong_Transaction TO THE TRANSACTION STACK\r\n    store.addCreateSongTransaction = (index, title, artist, youTubeId) => {\r\n        // ADD A SONG ITEM AND ITS NUMBER\r\n        let song = {\r\n            title: title,\r\n            artist: artist,\r\n            youTubeId: youTubeId\r\n        };\r\n        let transaction = new CreateSong_Transaction(store, index, song);\r\n        tps.addTransaction(transaction);\r\n    }    \r\n    store.addMoveSongTransaction = function (start, end) {\r\n        let transaction = new MoveSong_Transaction(store, start, end);\r\n        tps.addTransaction(transaction);\r\n    }\r\n    // THIS FUNCTION ADDS A RemoveSong_Transaction TO THE TRANSACTION STACK\r\n    store.addRemoveSongTransaction = () => {\r\n        let index = store.currentSongIndex;\r\n        let song = store.currentList.songs[index];\r\n        let transaction = new RemoveSong_Transaction(store, index, song);\r\n        tps.addTransaction(transaction);\r\n    }\r\n    store.addUpdateSongTransaction = function (index, newSongData) {\r\n        let song = store.currentList.songs[index];\r\n        let oldSongData = {\r\n            title: song.title,\r\n            artist: song.artist,\r\n            youTubeId: song.youTubeId\r\n        };\r\n        let transaction = new UpdateSong_Transaction(this, index, oldSongData, newSongData);        \r\n        tps.addTransaction(transaction);\r\n    }\r\n    store.updateCurrentList = function(list) {\r\n        async function asyncUpdateCurrentList(list) {\r\n            const response = await api.updatePlaylistById(list._id, list);\r\n            if (response.data.success) {\r\n                let playlist = response.data.playlist;\r\n                storeReducer({\r\n                    type: GlobalStoreActionType.SET_CURRENT_LIST,\r\n                    payload: playlist\r\n                });\r\n                store.loadIdNamePairs();\r\n                store.getAllPlaylists();\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n        asyncUpdateCurrentList(list);\r\n    }\r\n    store.undo = function () {\r\n        tps.undoTransaction();\r\n    }\r\n    store.redo = function () {\r\n        tps.doTransaction();\r\n    }\r\n    store.canAddNewSong = function() {\r\n        return (store.currentList !== null);\r\n    }\r\n    store.canUndo = function() {\r\n        return ((store.currentList !== null) && tps.hasTransactionToUndo());\r\n    }\r\n    store.canRedo = function() {\r\n        return ((store.currentList !== null) && tps.hasTransactionToRedo());\r\n    }\r\n    store.canClose = function() {\r\n        return (store.currentList !== null);\r\n    }\r\n\r\n    // THIS FUNCTION ENABLES THE PROCESS OF EDITING A LIST NAME\r\n    store.setIsListNameEditActive = function () {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.SET_LIST_NAME_EDIT_ACTIVE,\r\n            payload: null\r\n        });\r\n    }\r\n    store.addComment = function(list, newCommentBody) {\r\n        console.log(newCommentBody);\r\n        let newComment = { body: newCommentBody, owner: auth.user.username, postedDate: new Date() };\r\n        list.comments.push(newComment);\r\n        //list.comments = [];\r\n        console.log(list);\r\n        store.updateCurrentList(list);\r\n    }\r\n    store.incrementListens = function(id) {\r\n        async function asyncIncrementListens(id) {\r\n            let response = await api.getPlaylistById(id);\r\n            if (response.data.success) {\r\n                let playlist = response.data.playlist;\r\n                if (playlist.publishedDate != null) {\r\n                    playlist.listens += 1;\r\n                    store.updateCurrentList(playlist);\r\n                }\r\n            }\r\n        }\r\n        asyncIncrementListens(id);\r\n    }\r\n    store.changePageView = function (pageType) {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.SET_PAGE_VIEW,\r\n            payload: pageType\r\n        });\r\n    }\r\n    store.changeFilter = function (keyWord, pageView) {\r\n        storeReducer({\r\n            type: GlobalStoreActionType.CHANGE_FILTER,\r\n            payload: { pageView: pageView,\r\n                string: keyWord }\r\n        });\r\n    }\r\n    store.sortPlaylists = function (propType, pageView) {\r\n        if (pageView === \"HOME\") {\r\n            let pairsArray = store.idNamePairs;\r\n            if (propType === \"Sort Name\") {\r\n                pairsArray.sort((a,b)=> a.name.localeCompare(b.name, undefined, {sensitivity: 'base'}));  \r\n            }\r\n            else if (propType === \"Sort Creation Date\") {\r\n                pairsArray.sort(function(a,b){\r\n                    return new Date(a.playlist.createdAt) - new Date(b.playlist.createdAt);\r\n                });                \r\n            } \r\n            else if (propType === \"Sort Last Edit Date\") {\r\n                pairsArray.sort(function(a,b){\r\n                    return new Date(b.playlist.updatedAt) - new Date(a.playlist.updatedAt);\r\n                });\r\n            }\r\n\r\n            storeReducer({\r\n                type: GlobalStoreActionType.SORT_PLAYLISTS,\r\n                payload: { pairsArray: pairsArray,\r\n                            pageView: pageView,\r\n                            allPlaylists: store.allPlaylists }\r\n            });\r\n        }\r\n        else if (pageView === \"ALL\" || pageView === \"USER\") {\r\n            let allLists = store.allPlaylists;\r\n            if (propType === \"Sort Name\") {\r\n                allLists.sort((a,b)=> a.name.localeCompare(b.name, undefined, {sensitivity: 'base'}));\r\n            }\r\n            else if (propType === \"Sort Publish Date\") {\r\n                allLists.sort(function(a,b){\r\n                    return new Date(b.playlist.publishedDate) - new Date(a.playlist.publishedDate);\r\n                });\r\n            }\r\n            else if (propType === \"Sort Listens\") {\r\n                allLists.sort(function(a,b){\r\n                    return b.playlist.listens - a.playlist.listens;\r\n                });\r\n            }\r\n            else if (propType === \"Sort Likes\") {\r\n                allLists.sort(function(a,b){\r\n                    return b.playlist.likers.length - a.playlist.likers.length;\r\n                });\r\n            }\r\n            else if (propType === \"Sort Dislikes\") {\r\n                allLists.sort(function(a,b){\r\n                    return b.playlist.dislikers.length - a.playlist.dislikers.length;\r\n                });\r\n            }\r\n\r\n            storeReducer({\r\n                type: GlobalStoreActionType.SORT_PLAYLISTS,\r\n               payload: { pairsArray: store.idNamePairs,\r\n                   pageView: pageView,\r\n                  allPlaylists: allLists }\r\n           });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalStoreContext.Provider value={{\r\n            store\r\n        }}>\r\n            {props.children}\r\n        </GlobalStoreContext.Provider>\r\n    );\r\n}\r\n\r\nexport default GlobalStoreContext;\r\nexport { GlobalStoreContextProvider };","import { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport AuthContext from '../auth';\r\n\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function AppBanner() {\r\n    const { auth } = useContext(AuthContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        console.log(\"open menu\");\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        handleMenuClose();\r\n        auth.logoutUser();\r\n    }\r\n\r\n    let menuItemStyle = {fontFamily:'Raleway', fontWeight:'bold', color:'#463f3a'}\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const loggedOutMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}><a style={menuItemStyle} href='/login/'>Login</a></MenuItem>\r\n            <MenuItem onClick={handleMenuClose}><a style={menuItemStyle} href='/register/'>Create Account</a></MenuItem>\r\n        </Menu>\r\n    );\r\n    const loggedInMenu = \r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleLogout} sx={menuItemStyle}>Logout</MenuItem>\r\n        </Menu>        \r\n\r\n    let menu = loggedOutMenu;\r\n    if (auth.loggedIn && auth.user != null) {\r\n        menu = loggedInMenu;\r\n    }\r\n    \r\n    function getAccountMenu(loggedIn, user) {\r\n        let userInitials = auth.getUserInitials();\r\n        if (loggedIn && user != null) \r\n            return <div id=\"userInitials-icon\"\r\n                    onClick={handleProfileMenuOpen}\r\n                    ><text id=\"userInitials-text\">{userInitials}</text></div>;\r\n        else\r\n            return <AccountCircle sx={{color: '#6b705c', fontSize: 30 }}/>;\r\n    }\r\n\r\n    function handleGuest() {\r\n        if (!(auth.loggedIn && auth.user != null))\r\n            auth.guestUser(false);\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar sx = {{ backgroundColor: '#ddbea9'}}>\r\n                    <Typography                        \r\n                        variant=\"h4\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ display: { xs: 'none', sm: 'block' } }}                        \r\n                    >\r\n                        <Link style={{ textDecoration: 'none', color: '#6b705c', fontSize:35, fontFamily: 'Brush Script MT', fontWeight: 'bold' }} \r\n                            to='/'\r\n                            onClick={handleGuest}\r\n                            >Playlister</Link>\r\n                    </Typography>\r\n                    <Box sx={{ flexGrow: 1 }}></Box>\r\n                    <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\r\n                        <IconButton\r\n                            size=\"large\"\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            { getAccountMenu(auth.loggedIn, auth.user) }\r\n                        </IconButton>\r\n                    </Box>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {\r\n                menu\r\n            }\r\n        </Box>\r\n    );\r\n}","import { GlobalStoreContext } from '../store'\r\nimport { useContext, useState } from 'react'\r\nimport AuthContext from '../auth'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Person from '@mui/icons-material/PersonOutlined';\r\nimport Home from '@mui/icons-material/HomeOutlined';\r\nimport Groups from '@mui/icons-material/GroupsOutlined';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Stack from '@mui/material/Stack';\r\nimport Sort from '@mui/icons-material/Sort';\r\nimport TextField from '@mui/material/TextField';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nexport default function NavBar() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const isMenuOpen = Boolean(anchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleChangeView = (viewType) => (event) => {\r\n        store.changePageView(viewType);     \r\n    }\r\n    const handleSort = (sortType) => (event) => {\r\n        store.sortPlaylists(sortType, store.pageView);\r\n        handleMenuClose();\r\n    }\r\n    function handleKeyPress(event){\r\n        if (event.code === \"Enter\"){\r\n            console.log(\"Search by \" + event.target.value);\r\n            store.changeFilter(event.target.value, store.pageView); \r\n        }\r\n    }\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    let inputPropsStyle = {style: {fontSize: 15, fontFamily:'Raleway'}}\r\n    let sortItemStyle = {fontFamily:'Raleway', fontWeight:'bold', color:'#463f3a'}\r\n\r\n    let sortMenuItems = \r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n            }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleSort(\"Sort Creation Date\")} style={sortItemStyle}>By Creation Date (Old-New)</MenuItem>\r\n            <MenuItem onClick={handleSort(\"Sort Last Edit Date\")} style={sortItemStyle}>By Last Edit Date (New-Old)</MenuItem>\r\n            <MenuItem onClick={handleSort(\"Sort Name\")} style={sortItemStyle}>By Name (A-Z)</MenuItem>\r\n        </Menu>\r\n    \r\n    if (store.pageView === \"ALL\" || store.pageView === \"USER\") {\r\n        sortMenuItems = \r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                id={menuId}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={isMenuOpen}\r\n                onClose={handleMenuClose}\r\n            >\r\n                <MenuItem onClick={handleSort(\"Sort Name\")} style={sortItemStyle}>Name (A - Z)</MenuItem>\r\n                <MenuItem onClick={handleSort(\"Sort Publish Date\")} style={sortItemStyle}>Publish Date (Newest)</MenuItem>\r\n                <MenuItem onClick={handleSort(\"Sort Listens\")} style={sortItemStyle}>Listens (High - Low)</MenuItem>\r\n                <MenuItem onClick={handleSort(\"Sort Likes\")} style={sortItemStyle}>Likes (High - Low)</MenuItem>\r\n                <MenuItem onClick={handleSort(\"Sort Dislikes\")} style={sortItemStyle}>Dislikes (High - Low)</MenuItem>\r\n            </Menu>\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n            <AppBar id=\"nav-bar\" position=\"static\">\r\n                <Toolbar sx = {{ backgroundColor: '#ffe8d6'}}>\r\n                    <Typography                        \r\n                        variant=\"h4\"\r\n                        noWrap\r\n                        component=\"div\"\r\n                        sx={{ display: { xs: 'none', sm: 'block' } }}                        \r\n                    >\r\n                    </Typography>\r\n                    <Stack direction=\"row\" spacing={1}>\r\n                        <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>HOME</span>} placement=\"bottom\">\r\n                            <IconButton disabled={(auth.isGuest)} onClick={handleChangeView(\"HOME\")}>\r\n                                <Home sx={(auth.isGuest) ? {fontSize: 40, color:'#bcb8b1'} : \r\n                                    (store.pageView === \"HOME\") ? {fontSize: 40, color:'#e8ac65'} : {fontSize: 40, color:'#463f3a'} }\r\n                                />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>ALL PLAYLISTS</span>} placement=\"bottom\">\r\n                            <IconButton onClick={handleChangeView(\"ALL\")}>\r\n                                <Groups sx={ (store.pageView === \"ALL\") ? {fontSize: 40, color:'#e8ac65'} : {fontSize: 40, color:'#463f3a'} }/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>ALL USERS</span>} placement=\"bottom\">\r\n                            <IconButton onClick={handleChangeView(\"USER\")}>\r\n                                <Person sx={(store.pageView === \"USER\") ? {fontSize: 40, color:'#e8ac65'} : {fontSize: 40, color:'#463f3a'} }/>\r\n                            </IconButton>\r\n                        </Tooltip>  \r\n                    </Stack>\r\n                    <Box sx={{flexGrow:1, ml:'5%'}}>\r\n                        <TextField \r\n                        inputProps={inputPropsStyle}\r\n                        InputLabelProps={inputPropsStyle}\r\n                        onKeyUp={(event)=> handleKeyPress(event)}  \r\n                        sx={{background:\"white\", width:\"80%\"}} \r\n                        label=\"Search\">\r\n                        </TextField>\r\n                    </Box>\r\n                    <Typography sx={{fontWeight:\"bold\", color:'#463f3a', fontFamily:'Raleway'}}> SORT BY </Typography>\r\n                    <IconButton onClick={handleProfileMenuOpen}><Sort sx={{ fontSize: 40, color:'#463f3a'}}></Sort></IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            { sortMenuItems }\r\n        </Box>\r\n    );\r\n}","import { useContext } from 'react'\r\nimport GlobalStoreContext from '../store';\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 430,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 0.5,\r\n};\r\n\r\nexport default function MUIDeleteModal() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    let name = \"\";\r\n    if (store.listMarkedForDeletion) {\r\n        name = store.listMarkedForDeletion.name;\r\n    }\r\n    function handleDeleteList(event) {\r\n        store.deleteMarkedList();\r\n        store.unmarkListForDeletion();\r\n    }\r\n    function handleCloseModal(event) {\r\n        store.unmarkListForDeletion();\r\n    }\r\n\r\n    let buttonStyle = { color:\"white\", fontWeight:'bold', fontFamily:'Raleway', backgroundColor:'#cb997e', \r\n        '&:hover':{ backgroundColor:'gray' }, margin:1 }\r\n\r\n    return (\r\n        <Modal\r\n            open={store.listMarkedForDeletion !== null}\r\n        >\r\n            <Box sx={style}>\r\n            <div className=\"modal-dialog\">\r\n                <header className=\"dialog-header\">\r\n                    Delete Playlist?\r\n                </header>\r\n                <div className=\"modal-center\">\r\n                    <div className=\"modal-center-content modal-text\">\r\n                        Are you sure you want to delete the \"{name}\" playlist?\r\n                    </div>\r\n                </div>\r\n                <div id=\"confirm-cancel-container\">\r\n                    <Button\r\n                        id=\"dialog-yes-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleDeleteList}\r\n                        sx={buttonStyle}\r\n                    >Confirm</Button>\r\n                    <Button\r\n                        id=\"dialog-no-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleCloseModal}\r\n                        sx={buttonStyle}\r\n                    >Cancel</Button>\r\n                </div>\r\n            </div>\r\n            </Box>\r\n        </Modal>\r\n    );\r\n}","import { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\n/*\r\n    Our Status bar React component goes at the bottom of our UI.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction Statusbar() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n\r\n    function handleCreateNewList() {\r\n        store.createNewList();\r\n    }\r\n\r\n    let statusbar = \"\";\r\n    if (store) {\r\n        if (store.pageView === \"HOME\") {\r\n            statusbar = \r\n            <div id=\"playlister-statusbar\">\r\n                <IconButton onClick={handleCreateNewList}>\r\n                    <AddIcon sx={{color: \"#463f3a\", fontSize: 60}}  />\r\n                </IconButton> \r\n                <Typography sx={{color: \"#463f3a\", fontFamily:'Raleway', fontWeight:'bold'}} variant=\"h4\">Add New Playlist</Typography>  \r\n            </div>\r\n        }\r\n        else {\r\n            statusbar = <div id=\"playlister-statusbar\"></div>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { statusbar }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Statusbar;","import React, { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport EditOutlined from '@mui/icons-material/EditOutlined';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nfunction SongCard(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const { song, index } = props;\r\n\r\n    function handleDragStart(event) {\r\n        event.dataTransfer.setData(\"song\", index);\r\n    }\r\n\r\n    function handleDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleDragEnter(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleDragLeave(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleDrop(event) {\r\n        event.preventDefault();\r\n        let targetIndex = index;\r\n        let sourceIndex = Number(event.dataTransfer.getData(\"song\"));\r\n\r\n        store.addMoveSongTransaction(sourceIndex, targetIndex);\r\n    }\r\n    function handleRemoveSong(event) {\r\n        store.showRemoveSongModal(index, song);\r\n    }\r\n    function handleEdit(event) {\r\n        store.showEditSongModal(index, song);\r\n    }\r\n\r\n    let cardClass = \"list-card unselected-list-card\";\r\n    let songCardButton = { background:'transparent', color:'white', '&:hover':{ color:'#463f3a' }, fontSize: 30 }\r\n\r\n    return (\r\n        <div\r\n            key={index}\r\n            id={'song-' + index + '-card'}\r\n            className={cardClass}\r\n            onDragStart={handleDragStart}\r\n            onDragOver={handleDragOver}\r\n            onDragEnter={handleDragEnter}\r\n            onDragLeave={handleDragLeave}\r\n            onDrop={handleDrop}\r\n            draggable=\"true\"\r\n        >\r\n            <div style={{marginTop: '-1.5%', width:'7%', float:'left', fontSize:'60px', fontWeight:'bold'}}><span>{index + 1}</span></div>\r\n            <span style={{fontSize:'25px', fontWeight:'bold'}}>{song.title}</span> <br></br>\r\n            <span style={{fontSize:'20px'}}>{song.artist}</span>\r\n            <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>REMOVE SONG</span>} placement=\"bottom\">\r\n                <DeleteOutline \r\n                id={\"remove-song-\" + index}\r\n                className=\"list-card-button\"\r\n                onClick={handleRemoveSong}\r\n                sx={songCardButton}  />\r\n            </Tooltip>\r\n            <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>EDIT SONG</span>} placement=\"bottom\">\r\n                <EditOutlined \r\n                id={\"edit-song-\" + index}\r\n                className=\"list-card-button\"\r\n                onClick={handleEdit}\r\n                sx={songCardButton}  /> \r\n            </Tooltip>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SongCard;","import { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nimport Button from '@mui/material/Button';\r\n\r\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction EditToolbar() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n\r\n    function handleUndo() {\r\n        store.undo();\r\n    }\r\n    function handleRedo() {\r\n        store.redo();\r\n    }\r\n\r\n    let buttonStyle = { color:\"white\", fontWeight:'bold', fontFamily:'Raleway', backgroundColor:'#cb997e', \r\n    '&:hover':{ backgroundColor:'gray' }, margin:1 }\r\n\r\n    return (\r\n        <div id=\"edit-toolbar\">\r\n            <Button \r\n                disabled={!store.canUndo()}\r\n                id='undo-button'\r\n                onClick={handleUndo}\r\n                variant=\"contained\"\r\n                sx={buttonStyle}>\r\n                    Undo\r\n            </Button>\r\n            <Button \r\n                disabled={!store.canRedo()}\r\n                id='redo-button'\r\n                onClick={handleRedo}\r\n                variant=\"contained\"\r\n                sx={buttonStyle}>\r\n                    Redo\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditToolbar;","import { useContext, useState } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport AuthContext from '../auth'\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport { Typography, Card, CardHeader, Stack, CardContent} from '@mui/material';\r\nimport {ThumbUpOutlined, ThumbDownOutlined} from '@mui/icons-material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport EditOutlined from '@mui/icons-material/EditOutlined';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nimport SongCard from './SongCard.js'\r\nimport EditToolbar from './EditToolbar';\r\n\r\n/*\r\n    This is a card in our list of top 5 lists. It lets select\r\n    a list for editing and it has controls for changing its \r\n    name or deleting it.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction ListCard(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const [editActive, setEditActive] = useState(false);\r\n    const [text, setText] = useState(\"\");\r\n    const { playlist, published, isExpanded, isHome  } = props;\r\n\r\n    function handleToggleEdit(event) {\r\n        event.stopPropagation();\r\n        toggleEdit();\r\n    }\r\n    function toggleEdit() {\r\n        let newActive = !editActive;\r\n        if (newActive) {\r\n            store.setIsListNameEditActive();\r\n        }\r\n        setEditActive(newActive);\r\n    }\r\n    function handleKeyPress(event) {\r\n        if (event.code === \"Enter\") {\r\n            let id = event.target.id.substring(\"list-\".length);\r\n            store.changeListName(id, text);\r\n            toggleEdit();\r\n        }\r\n    }\r\n    function handleUpdateText(event) {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    function handleAddNewSong() {\r\n        store.addNewSong();\r\n    }\r\n    function handleDeleteList() {\r\n        store.markListForDeletion(playlist._id);\r\n        store.closeCurrentList();\r\n    }\r\n    function handleDuplicateList() {\r\n        store.duplicatePlaylist(playlist);\r\n    }\r\n    function handlePublishList() {\r\n        store.publishPlaylist(playlist);\r\n    }\r\n\r\n    function addLike(){\r\n        if (playlist.likers.includes(auth.user.username)){\r\n            playlist.likers.splice(playlist.likers.indexOf(auth.user.username),1)\r\n            \r\n        }else if (playlist.dislikers.includes(auth.user.username)){\r\n            playlist.likers.push(auth.user.username);\r\n            playlist.dislikers.splice(playlist.dislikers.indexOf(auth.user.username),1)\r\n        }else{\r\n            playlist.likers.push(auth.user.username);\r\n        }\r\n        store.updateCurrentList(playlist);\r\n        store.closeCurrentList();\r\n    }\r\n\r\n    function addDislike(){\r\n        if (playlist.dislikers.includes(auth.user.username)){\r\n            playlist.dislikers.splice(playlist.dislikers.indexOf(auth.user.username),1)\r\n            \r\n        }else if (playlist.likers.includes(auth.user.username)){\r\n            playlist.dislikers.push(auth.user.username);\r\n            playlist.likers.splice(playlist.likers.indexOf(auth.user.username),1)\r\n        }else{\r\n            playlist.dislikers.push(auth.user.username);\r\n        }\r\n        store.updateCurrentList(playlist);\r\n        store.closeCurrentList();\r\n    }\r\n\r\n    let buttonStyle = { color:\"white\", fontWeight:'bold', fontFamily:'Raleway', backgroundColor:'#cb997e', \r\n        '&:hover':{ backgroundColor:'gray' }, margin:1 }\r\n\r\n    let cardContent = \"\";\r\n    if (isExpanded === true) {\r\n        cardContent =\r\n        <CardContent>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <List \r\n                    id=\"playlist-cards\" \r\n                    sx={{ width: '100%'}}\r\n                >\r\n                    {\r\n                        playlist.songs.map((song, index) => (\r\n                            <SongCard\r\n                                id={'playlist-song-' + (index)}\r\n                                key={'playlist-song-' + (index)}\r\n                                index={index}\r\n                                song={song}\r\n                            />\r\n                        ))  \r\n                    }\r\n                </List>           \r\n            </Box>\r\n            <Box>\r\n                <EditToolbar />\r\n                <div id=\"publish-toolbar\">\r\n                    <Button \r\n                        id='publish-button'\r\n                        onClick={handleAddNewSong}\r\n                        variant=\"contained\"\r\n                        sx={buttonStyle}>\r\n                        <AddIcon sx={{color: \"white\", fontSize: 25}}  /> \r\n                        <span style={{color:\"white\", fontWeight:'bold', fontFamily:'Raleway'}}>Add New Song</span>\r\n                    </Button>\r\n                    <Button \r\n                        id='publish-button'\r\n                        onClick={handlePublishList}\r\n                        variant=\"contained\"\r\n                        sx={buttonStyle}>\r\n                            Publish\r\n                    </Button>\r\n                    <Button \r\n                        id='delete-button'\r\n                        onClick={handleDeleteList}\r\n                        variant=\"contained\"\r\n                        sx={buttonStyle}>\r\n                            Delete\r\n                    </Button>\r\n                    <Button\r\n                        id='duplicate-button'\r\n                        onClick={handleDuplicateList}\r\n                        variant=\"contained\"\r\n                        sx={buttonStyle}>\r\n                            Duplicate\r\n                    </Button>\r\n                </div>\r\n            </Box>\r\n        </CardContent>\r\n    }\r\n\r\n    let cardElement =\r\n    <Card \r\n        key={\"listcard-\" + playlist._id}\r\n        sx={{width:'100%', backgroundColor:'#f1dca7', color: '#463f3a'}}>\r\n        <CardHeader\r\n        title={playlist.name}\r\n        subheader={\"By: \" + playlist.ownerUsername}\r\n        action={\r\n            <div id=\"buttonbox\"> \r\n                <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>EDIT NAME</span>} placement=\"bottom\">\r\n                    <IconButton onClick={handleToggleEdit}>\r\n                        <EditOutlined \r\n                        id={\"edit-list-\" + playlist._id}\r\n                        className=\"list-card-button\"\r\n                        sx={{ color:'#463f3a', fontSize: 30 }}  /> \r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n        }\r\n        titleTypographyProps={{variant:'h5', fontFamily:'Raleway', fontWeight:'bold'}}\r\n        subheaderTypographyProps={{variant:'h7', fontFamily:'Raleway'}}\r\n        >   \r\n        </CardHeader>\r\n        { cardContent }\r\n    </Card>;\r\n\r\n    let deleteButton = \"\";\r\n    if(isHome) {\r\n        deleteButton =\r\n        <Button \r\n            id='delete-button'\r\n            onClick={handleDeleteList}\r\n            variant=\"contained\"\r\n            sx={buttonStyle}>\r\n                Delete\r\n        </Button>\r\n    }\r\n\r\n    if(published === true) {\r\n        let newDate = new Date(playlist.publishedDate);\r\n        let date = newDate.toDateString();\r\n        let numListens = playlist.listens;\r\n\r\n        if (isExpanded === true) {\r\n            cardContent =\r\n            <CardContent>\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <List \r\n                        id=\"playlist-cards\" \r\n                        sx={{ width: '99%', backgroundColor:'#6b705c', borderRadius:'5px' }}\r\n                    >\r\n                        {\r\n                            playlist.songs.map((song, index) => (\r\n                                <ListItem\r\n                                    key={\"list-song-\" + index}\r\n                                    sx={{ color:'white'}}\r\n                                >\r\n                                    <span style={{fontSize:'25px', fontWeight:'bold', marginRight:'1%'}}>{index + 1}</span> \r\n                                    <span style={{fontSize:'25px', fontWeight:'bold', marginRight:'1%'}}>{song.title}</span> \r\n                                    <span style={{fontSize:'20px'}}>{song.artist}</span>\r\n                                </ListItem>\r\n                            ))  \r\n                        }\r\n                    </List>           \r\n                </Box>\r\n                <Box>\r\n                    <div id=\"publish-toolbar\">\r\n                        { deleteButton }\r\n                        <Button\r\n                            id='duplicate-button'\r\n                            onClick={handleDuplicateList}\r\n                            variant=\"contained\"\r\n                            disabled={auth.isGuest}\r\n                            sx={ buttonStyle }>\r\n                                Duplicate\r\n                        </Button>\r\n                    </div>\r\n                </Box>\r\n            </CardContent>\r\n        }\r\n\r\n        cardElement = \r\n        <Card \r\n        key={\"listcard-\" + playlist._id}\r\n        sx={{width:'100%', backgroundColor:'#a5a58d', color:'#463f3a', fontFamily:'Raleway'}}>\r\n            <CardHeader\r\n            title={playlist.name}\r\n            subheader={\"By: \" + playlist.ownerUsername}\r\n            action={\r\n                <div id=\"buttonbox\"> \r\n                    <Stack direction=\"row\" justifyContent=\"space-between\" spacing={2} >\r\n                        <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>LIKE</span>} placement=\"bottom\">\r\n                            <IconButton onClick={addLike} disabled={auth.isGuest}>\r\n                                <ThumbUpOutlined sx={{ fontSize:35, \r\n                                color: (auth.isGuest) ? \"gray\" : ((playlist.likers.includes(auth.user.username))?'#f1dca7':'#463f3a') }}\r\n                                ></ThumbUpOutlined>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Typography sx={{paddingTop:1, fontSize:25}}>{playlist.likers.length}</Typography>\r\n                        <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>DISLIKE</span>} placement=\"bottom\">\r\n                            <IconButton onClick={addDislike} disabled={auth.isGuest}>\r\n                                <ThumbDownOutlined sx={{fontSize:35,\r\n                                color: (auth.isGuest) ? \"gray\" : ((playlist.dislikers.includes(auth.user.username))?'#f1dca7':'#463f3a')}}\r\n                                ></ThumbDownOutlined>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Typography sx={{paddingTop:1, fontSize:25}}>{playlist.dislikers.length}</Typography>\r\n                    </Stack>\r\n                </div>\r\n            }\r\n            titleTypographyProps={{variant:'h5', fontFamily:'Raleway', fontWeight:'bold'}}\r\n            subheaderTypographyProps={{variant:'h7', fontFamily:'Raleway'}}\r\n            >   \r\n            </CardHeader>\r\n            <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                <Typography sx={{margin:'10px', fontSize:15,  marginLeft:'2%'}}>\r\n                    <span style={{fontWeight:'bold', fontFamily:'Raleway'}}>Published: </span> \r\n                    <span style={{fontStyle: 'italic', fontFamily:'Raleway'}}>{ date }</span>\r\n                </Typography>\r\n                <Typography sx={{margin:'10px', fontSize:15, marginRight:'2%'}}>\r\n                    <span style={{fontWeight:'bold', fontFamily:'Raleway'}}>Listens: </span>\r\n                    <span style={{fontFamily:'Raleway'}}>{ numListens }</span>\r\n                </Typography>\r\n            </Stack>\r\n            { cardContent }\r\n        </Card>\r\n    }\r\n\r\n    if (editActive) {\r\n        cardElement =\r\n            <TextField\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id={\"list-\" + playlist._id}\r\n                label=\"Playlist Name\"\r\n                name=\"name\"\r\n                autoComplete=\"Playlist Name\"\r\n                className='list-card'\r\n                onKeyPress={handleKeyPress}\r\n                onChange={handleUpdateText}\r\n                defaultValue={playlist.name}\r\n                inputProps={{style: {fontSize: '25px', fontFamily:'Raleway'}}}\r\n                InputLabelProps={{style: {fontSize: '25px', fontFamily:'Raleway'}}}\r\n                sx={{background:\"white\"}} \r\n                autoFocus\r\n            />\r\n    }\r\n    return (\r\n        cardElement\r\n    );\r\n}\r\n\r\nexport default ListCard;","import React, { useContext, useState } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nimport ListCard from './ListCard.js'\r\n\r\nimport List from '@mui/material/List';\r\nimport { Accordion } from '@mui/material';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\n/*\r\n    This React component lets us edit a loaded list, which only\r\n    happens when we are on the proper route.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction AllScreen() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [expand, setExpanded] = useState(false);\r\n\r\n    const handleChange = (panel, isExpanded) => (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        setExpanded(isExpanded ? false : panel);\r\n        if (isExpanded === false) {\r\n            store.setCurrentList(panel);\r\n            store.incrementListens(panel);\r\n        }\r\n        else\r\n            store.closeCurrentList(); \r\n    };\r\n\r\n    let allLists = [];\r\n    if(store.allPlaylists != null) {\r\n        allLists = store.allPlaylists.filter(pair => pair.playlist.publishedDate != null);\r\n    }\r\n\r\n    if(store.filter !== \"\") {\r\n        allLists = allLists.filter(pair => pair.name.toLowerCase().includes(store.filter.toLowerCase())); \r\n    }\r\n\r\n    return (\r\n        <List sx={{ width: '98%', left: '2%', bgcolor: '#ddbea9', overflowY:\"scroll\", borderRadius:'5px', marginTop:'-0.5%' }}>\r\n            {\r\n                allLists.map((pair) => (\r\n                    <Accordion\r\n                    expanded={expand === pair._id}\r\n                    key={pair._id}\r\n                    >\r\n                        <AccordionSummary>\r\n                            <ListCard\r\n                            playlist={pair.playlist}\r\n                            published={(pair.playlist.publishedDate != null)}\r\n                            isExpanded={(expand === pair._id)}\r\n                            isHome={(store.pageView === \"HOME\")}\r\n                            />\r\n                            <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>\r\n                                {(expand === pair._id) ? \r\n                                    \"CLOSE PLAYLIST\" : \r\n                                    \"OPEN PLAYLIST\"}\r\n                                </span>} placement=\"bottom\">\r\n                                <Button \r\n                                onClick={handleChange(pair._id, (expand === pair._id))} \r\n                                sx={{ '&:hover':{ backgroundColor:'#ffffff'} , \r\n                                    \"& .MuiTouchRipple-child\": { backgroundColor: `#d3d3d3 !important` }\r\n                                }}\r\n                                >\r\n                                    {(expand === pair._id) ? \r\n                                    <ExpandLessIcon sx={{ color:'black' }} /> : \r\n                                    <ExpandMoreIcon sx={{ color:'black' }} />}\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            { }\r\n                        </AccordionDetails>\r\n                    </Accordion>  \r\n                    \r\n                ))\r\n            }\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default AllScreen;","import React, { useContext, useState } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nimport ListCard from './ListCard.js'\r\n\r\nimport List from '@mui/material/List';\r\nimport { Accordion } from '@mui/material';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\n/*\r\n    This React component lets us edit a loaded list, which only\r\n    happens when we are on the proper route.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction UserScreen() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [expand, setExpanded] = useState(false);\r\n    \r\n    const handleChange = (panel, isExpanded) => (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        setExpanded(isExpanded ? false : panel);\r\n        if (isExpanded === false) {\r\n            store.setCurrentList(panel);\r\n            store.incrementListens(panel);\r\n        }\r\n        else\r\n            store.closeCurrentList(); \r\n    };\r\n\r\n    let allLists = [];\r\n    if(store.filter !== \"\") {\r\n        if(store.allPlaylists != null) {\r\n            allLists = store.allPlaylists.filter(pair => pair.playlist.publishedDate != null);\r\n            allLists = allLists.filter(pair => pair.playlist.ownerUsername.toLowerCase().includes(store.filter.toLowerCase())); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <List sx={{ width: '98%', left: '2%', bgcolor: '#ddbea9', overflowY:\"scroll\", borderRadius:'5px', marginTop:'-0.5%' }}>\r\n            {\r\n                allLists.map((pair) => (\r\n                    <Accordion\r\n                expanded={expand === pair._id}\r\n                key={pair._id}\r\n                >\r\n                    <AccordionSummary>\r\n                        <ListCard\r\n                        playlist={pair.playlist}\r\n                        published={(pair.playlist.publishedDate != null)}\r\n                        isExpanded={(expand === pair._id)}\r\n                        isHome={(store.pageView === \"HOME\")}\r\n                        />\r\n                        <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>\r\n                            {(expand === pair._id) ? \r\n                                \"CLOSE PLAYLIST\" : \r\n                                \"OPEN PLAYLIST\"}\r\n                            </span>} placement=\"bottom\">\r\n                            <Button \r\n                            onClick={handleChange(pair._id, (expand === pair._id))} \r\n                            sx={{ '&:hover':{ backgroundColor:'#ffffff'} , \r\n                                \"& .MuiTouchRipple-child\": { backgroundColor: `#d3d3d3 !important` }\r\n                            }}\r\n                            >\r\n                                {(expand === pair._id) ? \r\n                                <ExpandLessIcon sx={{ color:'black' }} /> : \r\n                                <ExpandMoreIcon sx={{ color:'black' }} />}\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        { }\r\n                    </AccordionDetails>\r\n                </Accordion>  \r\n                    \r\n                ))\r\n            }\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default UserScreen;","import { useContext, useState } from 'react'\r\nimport GlobalStoreContext from '../store';\r\n\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\nimport { Stack } from '@mui/material';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 420,\r\n    borderRadius: '10px',\r\n    borderColor: '#c4c4c4',\r\n    borderWidth: '2px',\r\n    borderStyle: 'solid',\r\n    fontFamily:'Raleway',\r\n    color:'#463f3a'\r\n};\r\n\r\nexport default function MUIEditSongModal() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [ title, setTitle ] = useState(store.currentSong.title);\r\n    const [ artist, setArtist ] = useState(store.currentSong.artist);\r\n    const [ youTubeId, setYouTubeId ] = useState(store.currentSong.youTubeId);\r\n\r\n    function handleConfirmEditSong() {\r\n        let newSongData = {\r\n            title: title,\r\n            artist: artist,\r\n            youTubeId: youTubeId\r\n        };\r\n        store.addUpdateSongTransaction(store.currentSongIndex, newSongData);        \r\n    }\r\n\r\n    function handleCancelEditSong() {\r\n        store.hideModals();\r\n    }\r\n\r\n    function handleUpdateTitle(event) {\r\n        setTitle(event.target.value);\r\n    }\r\n\r\n    function handleUpdateArtist(event) {\r\n        setArtist(event.target.value);\r\n    }\r\n\r\n    function handleUpdateYouTubeId(event) {\r\n        setYouTubeId(event.target.value);\r\n    }\r\n\r\n    let buttonStyle = { color:\"white\", fontWeight:'bold', fontFamily:'Raleway', backgroundColor:'#cb997e', \r\n        '&:hover':{ backgroundColor:'gray' }, margin:1 }\r\n\r\n    return (\r\n        <Modal\r\n            open={store.currentSong !== null}\r\n        >\r\n            <Box sx={style}>\r\n            <div className=\"modal-dialog\">\r\n                <header className=\"dialog-header\">\r\n                    Edit Song\r\n                </header>\r\n                <div className=\"modal-center\">\r\n                    <div className=\"modal-center-content\">\r\n                        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                            <text id=\"title-prompt\" className=\"modal-prompt\">Title:</text>\r\n                            <input \r\n                                id=\"edit-song-modal-title-textfield\" \r\n                                className='modal-textfield' \r\n                                type=\"text\" \r\n                                defaultValue={title} \r\n                                onChange={handleUpdateTitle} />\r\n                        </Stack>\r\n                        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                            <text id=\"artist-prompt\" className=\"modal-prompt\">Artist:</text>\r\n                            <input \r\n                                id=\"edit-song-modal-artist-textfield\" \r\n                                className='modal-textfield' \r\n                                type=\"text\" \r\n                                defaultValue={artist} \r\n                                onChange={handleUpdateArtist} />\r\n                        </Stack>\r\n                        <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                            <text id=\"you-tube-id-prompt\" className=\"modal-prompt\">YouTube Id:</text>\r\n                            <input \r\n                                id=\"edit-song-modal-youTubeId-textfield\" \r\n                                className='modal-textfield' \r\n                                type=\"text\" \r\n                                defaultValue={youTubeId} \r\n                                onChange={handleUpdateYouTubeId} />\r\n                        </Stack>\r\n                    </div>\r\n                </div>\r\n                <div id=\"confirm-cancel-container\">\r\n                    <Button\r\n                        id=\"dialog-yes-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleConfirmEditSong}\r\n                        sx={buttonStyle}\r\n                    >Confirm</Button>\r\n                    <Button\r\n                        id=\"dialog-no-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleCancelEditSong}\r\n                        sx={buttonStyle}\r\n                    >Cancel</Button>\r\n                </div>\r\n            </div>\r\n            </Box>\r\n        </Modal>\r\n    );\r\n}","import { useContext } from 'react'\r\nimport GlobalStoreContext from '../store';\r\nimport * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Button from '@mui/material/Button';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 430,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 0.5,\r\n};\r\n\r\nexport default function MUIRemoveSongModal() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n\r\n    function handleConfirmRemoveSong () {\r\n        store.addRemoveSongTransaction();\r\n    }\r\n\r\n    function handleCancelRemoveSong () {\r\n        store.hideModals();\r\n    }\r\n    \r\n    let songTitle = \"\";\r\n    if (store.currentSong) {\r\n        songTitle = store.currentSong.title;\r\n    }\r\n\r\n    let buttonStyle = { color:\"white\", fontWeight:'bold', fontFamily:'Raleway', backgroundColor:'#cb997e', \r\n        '&:hover':{ backgroundColor:'gray' }, margin:1 }\r\n\r\n    return (\r\n        <Modal\r\n            open={store.currentSong !== null}\r\n        >\r\n            <Box sx={style}>\r\n            <div className=\"modal-dialog\">\r\n                <header className=\"dialog-header\">\r\n                    Remove Song?\r\n                </header>\r\n                <div className=\"modal-center\">\r\n                    <div className=\"modal-center-content modal-text\">\r\n                        Are you sure you want to remove \"{songTitle}\" from the playlist?\r\n                    </div>\r\n                </div>\r\n                <div id=\"confirm-cancel-container\">\r\n                    <Button\r\n                        id=\"dialog-yes-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleConfirmRemoveSong}\r\n                        sx={buttonStyle}\r\n                    >Confirm</Button>\r\n                    <Button\r\n                        id=\"dialog-no-button\"\r\n                        className=\"modal-button\"\r\n                        onClick={handleCancelRemoveSong}\r\n                        sx={buttonStyle}\r\n                    >Cancel</Button>\r\n                </div>\r\n            </div>\r\n            </Box>\r\n        </Modal>\r\n    );\r\n}","import React, { useContext, useState } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport AuthContext from '../auth'\r\n\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport List from '@mui/material/List';\r\nimport { Accordion } from '@mui/material';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nimport MUIEditSongModal from './MUIEditSongModal'\r\nimport MUIRemoveSongModal from './MUIRemoveSongModal'\r\nimport ListCard from './ListCard.js'\r\n\r\n/*\r\n    This React component lists all the top5 lists in the UI.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nconst WorkspaceScreen = () => {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const { auth } = useContext(AuthContext);\r\n    const [expand, setExpanded] = useState(false);\r\n\r\n    const handleChange = (panel, isExpanded) => (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        setExpanded(isExpanded ? false : panel);\r\n        if (isExpanded === false) {\r\n            store.setCurrentList(panel);\r\n            store.incrementListens(panel);\r\n        }\r\n        else\r\n            store.closeCurrentList(); \r\n    };\r\n\r\n    let modalJSX = \"\";\r\n    if (store) {\r\n        if (store.isEditSongModalOpen()) {\r\n            modalJSX = <MUIEditSongModal />;\r\n        }\r\n        else if (store.isRemoveSongModalOpen()) {\r\n            modalJSX = <MUIRemoveSongModal />;\r\n        }  \r\n    }\r\n\r\n    console.log(auth.loggedIn);\r\n    console.log(auth.user);\r\n    console.log(store.idNamePairs);\r\n\r\n    return (\r\n        <List sx={{ width: '98%', left: '2%', bgcolor: '#ddbea9', overflowY:\"scroll\", borderRadius:'5px', marginTop:'-0.5%' }}>\r\n        {\r\n            store.idNamePairs.map((pair) => (\r\n                <Accordion\r\n                expanded={expand === pair._id}\r\n                key={pair._id}\r\n                >\r\n                    <AccordionSummary>\r\n                        <ListCard\r\n                        playlist={pair.playlist}\r\n                        published={(pair.playlist.publishedDate != null)}\r\n                        isExpanded={(expand === pair._id)}\r\n                        isHome={(store.pageView === \"HOME\")}\r\n                        />\r\n                        <Tooltip title={<span style={{ fontFamily:'Raleway', fontSize:'15px' }}>\r\n                            {(expand === pair._id) ? \r\n                                \"CLOSE PLAYLIST\" : \r\n                                \"OPEN PLAYLIST\"}\r\n                            </span>} placement=\"bottom\">\r\n                            <Button \r\n                            onClick={handleChange(pair._id, (expand === pair._id))} \r\n                            sx={{ '&:hover':{ backgroundColor:'#ffffff'} , \r\n                                \"& .MuiTouchRipple-child\": { backgroundColor: `#d3d3d3 !important` }\r\n                            }}\r\n                            >\r\n                                {(expand === pair._id) ? \r\n                                <ExpandLessIcon sx={{ color:'black' }} /> : \r\n                                <ExpandMoreIcon sx={{ color:'black' }} />}\r\n                            </Button>\r\n                        </Tooltip>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        { modalJSX }\r\n                    </AccordionDetails>\r\n                </Accordion>          \r\n            ))\r\n        }\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default WorkspaceScreen;","import React, { useState } from 'react'\r\nimport YouTube from 'react-youtube';\r\n\r\nimport { FastRewind, Stop, PlayArrow, FastForward } from '@mui/icons-material';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nfunction PlaylisterYoutubePlayer(props) {\r\n    // THIS EXAMPLE DEMONSTRATES HOW TO DYNAMICALLY MAKE A\r\n    // YOUTUBE PLAYER AND EMBED IT IN YOUR SITE. IT ALSO\r\n    // DEMONSTRATES HOW TO IMPLEMENT A PLAYLIST THAT MOVES\r\n    // FROM ONE SONG TO THE NEXT\r\n    const { currentList } = props;\r\n    const [ currentPlayer, setCurrentPlayer] = useState(null);\r\n    const [ currentSongIndex, setCurrentSongIndex] = useState(0);\r\n    const [ currentSongPlaying, setCurrentSongPlaying] = useState(null);\r\n\r\n    // THIS HAS THE YOUTUBE IDS FOR THE SONGS IN OUR PLAYLIST\r\n    let playlist = [];\r\n    for(let i = 0; i < currentList.songs.length; i++) {\r\n        playlist.push(currentList.songs[i].youTubeId);\r\n    }\r\n\r\n    // THIS IS THE INDEX OF THE SONG CURRENTLY IN USE IN THE PLAYLIST\r\n    //let currentSongIndex = 0;\r\n\r\n    const playerOptions = {\r\n        height: '300',\r\n        width: '520',\r\n        playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay: 0,\r\n        },\r\n    };\r\n\r\n    // THIS FUNCTION LOADS THE CURRENT SONG INTO\r\n    // THE PLAYER AND PLAYS IT\r\n    function loadAndPlayCurrentSong(player) {\r\n        let song = playlist[currentSongIndex];\r\n        setCurrentSongPlaying(currentList.songs[currentSongIndex]);\r\n        player.loadVideoById(song);\r\n        player.playVideo();\r\n    }\r\n\r\n    // THIS FUNCTION INCREMENTS THE PLAYLIST SONG TO THE NEXT ONE\r\n    function incSong() {\r\n        if (currentSongIndex < playlist.length - 1) {\r\n            let idx = currentSongIndex + 1;\r\n            setCurrentSongIndex(idx);\r\n        }\r\n        else\r\n            setCurrentSongIndex(playlist.length - 1);\r\n    }\r\n\r\n    // THIS FUNCTION INCREMENTS THE PLAYLIST SONG TO THE NEXT ONE\r\n    function decSong() {\r\n        if (currentSongIndex > 0) {\r\n            let idx = currentSongIndex - 1;\r\n            setCurrentSongIndex(idx);\r\n        }\r\n        else\r\n            setCurrentSongIndex(0);\r\n    }\r\n\r\n    function onPlayerReady(event) {\r\n        setCurrentPlayer(event.target);\r\n        loadAndPlayCurrentSong(event.target);\r\n        event.target.playVideo();\r\n    }\r\n\r\n    // THIS IS OUR EVENT HANDLER FOR WHEN THE YOUTUBE PLAYER'S STATE\r\n    // CHANGES. NOTE THAT playerStatus WILL HAVE A DIFFERENT INTEGER\r\n    // VALUE TO REPRESENT THE TYPE OF STATE CHANGE. A playerStatus\r\n    // VALUE OF 0 MEANS THE SONG PLAYING HAS ENDED.\r\n    function onPlayerStateChange(event) {\r\n        let playerStatus = event.data;\r\n        let player = event.target;\r\n        if (playerStatus === -1) {\r\n            // VIDEO UNSTARTED\r\n            console.log(\"-1 Video unstarted\");\r\n        } else if (playerStatus === 0) {\r\n            // THE VIDEO HAS COMPLETED PLAYING\r\n            console.log(\"0 Video ended\");\r\n            incSong();\r\n            loadAndPlayCurrentSong(player);\r\n            //setCurrentSongPlaying(currentList.songs[currentSongIndex]);\r\n        } else if (playerStatus === 1) {\r\n            // THE VIDEO IS PLAYED\r\n            console.log(\"1 Video played\");\r\n        } else if (playerStatus === 2) {\r\n            // THE VIDEO IS PAUSED\r\n            console.log(\"2 Video paused\");\r\n        } else if (playerStatus === 3) {\r\n            // THE VIDEO IS BUFFERING\r\n            console.log(\"3 Video buffering\");\r\n        } else if (playerStatus === 5) {\r\n            // THE VIDEO HAS BEEN CUED\r\n            console.log(\"5 Video cued\");\r\n        }\r\n    }\r\n\r\n    function handleStopPlaying() {\r\n        currentPlayer.pauseVideo();\r\n    }\r\n    function handleStartPlaying() {\r\n        currentPlayer.playVideo();\r\n    }\r\n    function handleNextSong() {\r\n        incSong();\r\n        loadAndPlayCurrentSong(currentPlayer);\r\n        handleStartPlaying();\r\n    }\r\n    function handlePrevSong() {\r\n        decSong();\r\n        loadAndPlayCurrentSong(currentPlayer);\r\n        handleStartPlaying();\r\n    }\r\n\r\n    let currentSongStyle ={fontSize:15, textAlign:'center', fontFamily: 'Raleway', color:'#463f3a'}\r\n    let songPlayerButtons = {fontSize:35, color:'#463f3a'}\r\n\r\n    let playerButtons = \r\n        <div id=\"youtube-player-button\">\r\n            <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={0.5} >\r\n                <IconButton disabled={!(currentSongIndex >= 0)}>\r\n                    <FastRewind onClick={handlePrevSong} sx={songPlayerButtons}></FastRewind>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <Stop onClick={handleStopPlaying} sx={songPlayerButtons}></Stop>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <PlayArrow onClick={handleStartPlaying} sx={songPlayerButtons}></PlayArrow>\r\n                </IconButton>\r\n                <IconButton disabled={!(currentSongIndex < playlist.length)}>\r\n                    <FastForward onClick={handleNextSong} sx={songPlayerButtons}></FastForward>\r\n                </IconButton>\r\n            </Stack>\r\n        </div>\r\n\r\n    let currentSongText = \"\";\r\n    if (currentSongPlaying) {\r\n        currentSongText =\r\n            <div id=\"current-song-text\">\r\n                <Typography sx={currentSongStyle}><span style={{fontWeight:'bold'}}>Playlist: </span> { currentList.name }</Typography>\r\n                <Typography sx={currentSongStyle}><span style={{fontWeight:'bold'}}>Song Number: </span> { currentSongIndex + 1 }</Typography>\r\n                <Typography sx={currentSongStyle}><span style={{fontWeight:'bold'}}>Title: </span> { currentSongPlaying.title }</Typography>\r\n                <Typography sx={currentSongStyle}><span style={{fontWeight:'bold'}}>Artist: </span> { currentSongPlaying.artist }</Typography>\r\n            </div>\r\n    }\r\n    \r\n    let youtube = \r\n        <div id='empty-playlist-text'>ADD A SONG TO LOAD YOUTUBE PLAYER</div>\r\n    if (playlist.length !== 0) {\r\n        youtube = \r\n        <YouTube\r\n        videoId={playlist[currentSongIndex]}\r\n        opts={playerOptions}\r\n        onReady={onPlayerReady}\r\n        onStateChange={onPlayerStateChange} />\r\n    }\r\n\r\n    return <div>\r\n            { youtube }\r\n            <div id=\"youtube-player-text\">\r\n                <Typography \r\n                sx={{paddingTop:'1.5%', fontSize:'25px', textAlign:'center', fontWeight:'bold', color:'#463f3a'}}>\r\n                    Now Playing</Typography>\r\n            </div>\r\n            { currentSongText }\r\n            { playerButtons }\r\n        </div>;\r\n}\r\n\r\nexport default PlaylisterYoutubePlayer;","import React, { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Paper from '@mui/material/Paper';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { Stack } from '@mui/material';\r\n\r\nexport default function CommentsBox() {\r\n  const { store } = useContext(GlobalStoreContext);\r\n\r\n  let comments = store.currentList.comments;\r\n  comments.sort(function(a,b){\r\n    return new Date(b.postedDate) - new Date(a.postedDate);\r\n  });\r\n\r\n  let commentItems = \r\n  <List sx={{ height: 435, mb: 2, backgroundColor:'#ffe8d6'}}>\r\n      <React.Fragment>\r\n        <ListItem sx={{backgroundColor:'white', borderRadius:'10px', mb:'5px', width:'99%'}}>\r\n          <ListItemText \r\n            primary={\r\n            <Stack justifyContent=\"center\">\r\n              <Typography type=\"body2\" sx={{ fontFamily:'Raleway', fontWeight:'bold', color:'#463f3a' }}>No comments q.q</Typography>\r\n            </Stack>}/>\r\n        </ListItem>\r\n      </React.Fragment>\r\n  </List>\r\n  \r\n  if(comments.length !== 0) {\r\n    commentItems = \r\n    <List sx={{ height: 435, mb: 2, backgroundColor:'#ffe8d6'}}>\r\n      {comments.map(({ body, owner, postedDate }) => (\r\n        <React.Fragment>\r\n          <ListItem sx={{backgroundColor:'white', borderRadius:'10px', mb:'5px', width:'99%'}}>\r\n            <ListItemAvatar>\r\n              <Avatar alt=\"Profile Picture\" sx={{backgroundColor:'#6b705c'}}> {owner.substring(0, 1)} </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText \r\n              primary={\r\n              <Stack direction=\"row\" justifyContent=\"space-between\">\r\n                <Typography type=\"body2\" sx={{ fontFamily:'Raleway', fontWeight:'bold', color:'#463f3a' }}>{owner}</Typography>\r\n                <Typography type=\"body2\" sx={{ fontFamily:'Raleway', fontStyle:'italic', color:'#463f3a', fontSize:'15px' }}>{new Date(postedDate).toLocaleString()}</Typography>\r\n              </Stack>} \r\n              secondary={<Typography type=\"body2\" sx={{ fontFamily:'Raleway', color:'#463f3a' }}>{body}</Typography>}/>\r\n          </ListItem>\r\n        </React.Fragment>\r\n      ))}\r\n    </List>\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Paper square sx={{ overflowY:'scroll', backgroundColor:'#ffe8d6' }}>\r\n        { commentItems }\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nimport MUIDeleteModal from './MUIDeleteModal'\r\nimport NavBar from './NavBar.js';\r\nimport Statusbar from './Statusbar.js';\r\nimport AllScreen from './AllScreen'\r\nimport UserScreen from './UserScreen'\r\nimport WorkspaceScreen from './WorkspaceScreen'\r\nimport PlaylisterYoutubePlayer from './PlaylisterYoutubePlayer';\r\nimport CommentsBox from './CommentsBox';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n/*\r\n    This React component lists all the top5 lists in the UI.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nconst HomeScreen = () => {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [playerComment, setPlayerComment] = useState(\"PLAYER\");\r\n    const [commentValue, setCommentValue] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        store.loadIdNamePairs();\r\n        store.getAllPlaylists();\r\n        store.changePageView(\"HOME\");\r\n    }, []);\r\n\r\n    function togglePlayer() {\r\n        setPlayerComment(\"PLAYER\");\r\n    }\r\n    function toggleComment() {\r\n        setPlayerComment(\"COMMENT\");\r\n    }\r\n\r\n    function handleKeyPress(event){\r\n        if (event.code === \"Enter\"){\r\n            store.addComment(store.currentList, event.target.value);\r\n            setCommentValue(\"\");\r\n        }\r\n    }\r\n\r\n    let inputPropsStyle = {style: {fontSize: 15, fontFamily:'Raleway'}}\r\n\r\n    let listCard = \"\";\r\n    let youtubePlayer = \"\";\r\n    let playerCommentBox = \"\";\r\n\r\n    if (store) {\r\n        console.log(store.currentList);\r\n        if (store.currentList != null) {\r\n            if (playerComment === \"PLAYER\") {\r\n                playerCommentBox = <PlaylisterYoutubePlayer currentList={store.currentList} />\r\n            }\r\n            else {\r\n                playerCommentBox = \r\n                <div>\r\n                    <div id=\"comments-box\">\r\n                        <CommentsBox />\r\n                    </div>\r\n                    <Box sx={{flexGrow:1, mt:'2%', mb:'2%'}}>\r\n                        <TextField\r\n                        onChange={(event) => {\r\n                            setCommentValue(event.target.value);\r\n                          }} \r\n                        onKeyUp={(event)=> handleKeyPress(event)}  \r\n                        sx={{background:\"white\", width:\"95%\"}} \r\n                        label=\"Add Comment\"\r\n                        value={commentValue}\r\n                        inputProps={inputPropsStyle}\r\n                        InputLabelProps={inputPropsStyle}/>\r\n                    </Box>\r\n                </div>\r\n            }\r\n\r\n            youtubePlayer = \r\n            <div id=\"youtube-player\">\r\n                <Box>\r\n                    <Button \r\n                        id='get-player-button'\r\n                        variant=\"contained\"\r\n                        onClick={togglePlayer}\r\n                        sx={{ backgroundColor: (playerComment === \"PLAYER\") ? '#cb997e' : '#ffe8d6', \r\n                        color: (playerComment === \"PLAYER\") ? '#white' : '#cb997e',\r\n                        fontWeight:'bold', fontFamily:'Raleway',\r\n                        '&:hover':{ backgroundColor:'gray', color:'white' } }}>\r\n                            Player\r\n                    </Button>\r\n                    <Button\r\n                        id='get-comments-button'\r\n                        variant=\"contained\"\r\n                        onClick={toggleComment}\r\n                        disabled={(store.currentList.publishedDate === null)}\r\n                        sx={{ backgroundColor: (playerComment === \"PLAYER\") ? '#ffe8d6' : '#cb997e', \r\n                        color: (playerComment === \"PLAYER\") ? '#cb997e' : '#white', \r\n                        fontWeight:'bold', fontFamily:'Raleway',\r\n                        '&:hover':{ backgroundColor:'gray', color:'white' } }}>\r\n                            Comments\r\n                    </Button>\r\n                    { playerCommentBox }\r\n                </Box>\r\n            </div>\r\n        }  \r\n\r\n        if(store.pageView === \"HOME\") {\r\n            listCard = \r\n            <div id=\"list-selector-list\"><WorkspaceScreen /></div>;\r\n        }\r\n        else if(store.pageView === \"ALL\") {\r\n            listCard = \r\n            <div id=\"list-selector-list\"><AllScreen /></div>;\r\n        }\r\n        else if(store.pageView === \"USER\") {\r\n            if(store.filter !== \"\") {\r\n                listCard = \r\n                <div id=\"list-selector-list\"><UserScreen /></div>;\r\n            }\r\n            else {\r\n                listCard = \r\n                    <React.Fragment>\r\n                    <ListItem sx={{mt:'10px', width:'99%'}}>\r\n                        <ListItemText \r\n                        primary={\r\n                        <Stack justifyContent=\"center\">\r\n                            <Typography type=\"body2\" sx={{ fontFamily:'Raleway', fontWeight:'bold', color:'#463f3a', textAlign:'center' }}>\r\n                                Search for Users . . . </Typography>\r\n                        </Stack>}/>\r\n                    </ListItem>\r\n                    </React.Fragment>\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"playlist-selector\">\r\n            <NavBar />\r\n            <Stack direction=\"row\" spacing={1}>\r\n                { listCard }\r\n                <MUIDeleteModal />\r\n                { youtubePlayer }\r\n            </Stack>\r\n            <Statusbar />\r\n        </div> )\r\n}\r\n\r\nexport default HomeScreen;","import { useContext } from 'react';\r\nimport AuthContext from '../auth'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport { Container } from '@mui/system';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function SplashScreen() {\r\n    const { auth } = useContext(AuthContext);\r\n\r\n    let buttonStyle = { backgroundColor:'#a5a58d', color:\"white\", fontWeight:'bold',\r\n        '&:hover': {\r\n            backgroundColor: '#c4c4c4',\r\n            color: '#a5a58d',\r\n        },\r\n        margin:1,\r\n        fontFamily:'Raleway',\r\n        width: '230px',\r\n    };\r\n    let guestButtonStyle = { backgroundColor:'#cb997e', color:\"white\", fontWeight:'bold',\r\n        '&:hover': {\r\n            backgroundColor: '#c4c4c4',\r\n            color: '#cb997e',\r\n        },\r\n        margin:1,\r\n        fontFamily:'Raleway',\r\n        width: '230px',\r\n    };\r\n    const history = useHistory();\r\n\r\n    const handleGuest = () => {    \r\n        console.log(\"handleGuest\");\r\n        auth.guestUser(true);\r\n    }\r\n\r\n    return (\r\n        <div id=\"splash-screen\">\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    backgroundColor: 'white',\r\n                    padding: '10%',\r\n                    textAlign: 'center',\r\n                    width: '100%',\r\n                    borderRadius: '10px',\r\n                    borderColor: '#c4c4c4',\r\n                    borderWidth: '2px',\r\n                    borderStyle: 'solid',\r\n                }}\r\n            >\r\n                <Typography sx={{fontWeight: 'bold', fontSize: 25, color: 'black', fontFamily:'Raleway'}}> \r\n                    Welcome to <span id=\"playlister-text\">Playlister</span>\r\n                </Typography>\r\n                <Typography sx={{fontSize: 15, color: 'black', fontFamily:'Raleway', width:'90%'}}>\r\n                    need a place to hold all your favorite songs in a playlist and share them with friends and community?\r\n                </Typography>\r\n                <Stack mt={'5%'} mb={'5%'}> \r\n                    <Button className=\"splash-screen-button\" variant=\"contained\" sx = {guestButtonStyle} onClick={handleGuest}>Continue as Guest</Button>\r\n                    <Button className=\"splash-screen-button\" variant=\"contained\" sx = {buttonStyle} onClick={() => history.push(\"/register/\")}>Create Account</Button>\r\n                    <Button className=\"splash-screen-button\" variant=\"contained\" sx = {buttonStyle} onClick={() => history.push(\"/login/\")}>Login</Button>\r\n                </Stack>\r\n\r\n                <Typography sx={{fontSize: 15, color: 'black', fontFamily:'Raleway'}}> \r\n                © Amara Im 2022\r\n                </Typography>\r\n            </Box>\r\n        </Container>\r\n        </div>\r\n        \r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\n\r\nimport AllScreen from './AllScreen'\r\nimport NavBar from './NavBar.js';\r\nimport Statusbar from './Statusbar.js';\r\nimport UserScreen from './UserScreen'\r\nimport PlaylisterYoutubePlayer from './PlaylisterYoutubePlayer';\r\nimport CommentsBox from './CommentsBox';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\n\r\n/*\r\n    This React component lists all the top5 lists in the UI.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nconst GuestScreen = () => {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [playerComment, setPlayerComment] = useState(\"PLAYER\");\r\n\r\n    useEffect(() => {\r\n        store.getAllPlaylists();\r\n        store.changePageView(\"ALL\");\r\n    }, []);\r\n\r\n    function togglePlayer() {\r\n        setPlayerComment(\"PLAYER\");\r\n    }\r\n    function toggleComment() {\r\n        setPlayerComment(\"COMMENT\");\r\n    }\r\n\r\n    let inputPropsStyle = {style: {fontSize: 15, fontFamily:'Raleway'}}\r\n\r\n    let listCard = \"\";\r\n    let youtubePlayer = \"\";\r\n    let playerCommentBox = \"\";\r\n\r\n    if (store) {\r\n        console.log(store.currentList);\r\n        if (store.currentList != null) {\r\n            if (playerComment === \"PLAYER\") {\r\n                playerCommentBox = <PlaylisterYoutubePlayer currentList={store.currentList} />\r\n            }\r\n            else {\r\n                playerCommentBox = \r\n                <div>\r\n                    <div id=\"comments-box\">\r\n                        <CommentsBox />\r\n                    </div>\r\n                    <Box sx={{flexGrow:1, mt:'2%', mb:'2%'}}>\r\n                        <TextField\r\n                        disabled={true}\r\n                        sx={{background:\"white\", width:\"95%\"}} \r\n                        label=\"Login or Register to Add Comments\"\r\n                        InputLabelProps={inputPropsStyle}/>\r\n                    </Box>\r\n                </div>\r\n            }\r\n\r\n            youtubePlayer = \r\n            <div id=\"youtube-player\">\r\n                <Box>\r\n                    <Button \r\n                        id='get-player-button'\r\n                        variant=\"contained\"\r\n                        onClick={togglePlayer}\r\n                        sx={{ backgroundColor: (playerComment === \"PLAYER\") ? '#cb997e' : '#ffe8d6', \r\n                        color: (playerComment === \"PLAYER\") ? '#white' : '#cb997e',\r\n                        fontWeight:'bold', fontFamily:'Raleway',\r\n                        '&:hover':{ backgroundColor:'gray', color:'white' } }}>\r\n                            Player\r\n                    </Button>\r\n                    <Button\r\n                        id='get-comments-button'\r\n                        variant=\"contained\"\r\n                        onClick={toggleComment}\r\n                        disabled={(store.currentList.publishedDate === null)}\r\n                        sx={{ backgroundColor: (playerComment === \"PLAYER\") ? '#ffe8d6' : '#cb997e', \r\n                        color: (playerComment === \"PLAYER\") ? '#cb997e' : '#white', \r\n                        fontWeight:'bold', fontFamily:'Raleway',\r\n                        '&:hover':{ backgroundColor:'gray', color:'white' } }}>\r\n                            Comments\r\n                    </Button>\r\n                    { playerCommentBox }\r\n                </Box>\r\n            </div>\r\n        }    \r\n\r\n        if(store.pageView === \"ALL\") {\r\n            listCard = <div id=\"list-selector-list\"><AllScreen /></div>;\r\n        }\r\n        else if(store.pageView === \"USER\") {\r\n            if(store.filter !== \"\") {\r\n                listCard = \r\n                <div id=\"list-selector-list\"><UserScreen /></div>;\r\n            }\r\n            else {\r\n                listCard = \r\n                    <React.Fragment>\r\n                    <ListItem sx={{mt:'10px', width:'99%'}}>\r\n                        <ListItemText \r\n                        primary={\r\n                        <Stack justifyContent=\"center\">\r\n                            <Typography type=\"body2\" sx={{ fontFamily:'Raleway', fontWeight:'bold', color:'#463f3a', textAlign:'center' }}>\r\n                                Search for Users . . . </Typography>\r\n                        </Stack>}/>\r\n                    </ListItem>\r\n                    </React.Fragment>\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div id=\"playlist-selector\">\r\n            <NavBar />\r\n            <Stack direction=\"row\" spacing={1}>\r\n                { listCard }\r\n                { youtubePlayer }\r\n            </Stack>\r\n            <Statusbar />\r\n        </div>)\r\n}\r\n\r\nexport default GuestScreen;","import { useContext } from 'react'\r\n\r\nimport HomeScreen from './HomeScreen'\r\nimport SplashScreen from './SplashScreen'\r\nimport AuthContext from '../auth'\r\nimport GuestScreen from './GuestScreen';\r\n\r\nexport default function HomeWrapper() {\r\n    const { auth } = useContext(AuthContext);\r\n    console.log(\"HomeWrapper auth.loggedIn: \" + auth.loggedIn);\r\n    \r\n    if (auth.user == null)\r\n        auth.loggedIn = false;\r\n\r\n    if(auth.isGuest) \r\n        return <GuestScreen />\r\n    \r\n    if (auth.loggedIn && auth.user != null)\r\n        return <HomeScreen />\r\n    else\r\n        return <SplashScreen />\r\n}","import Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nexport default function Copyright(props) {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props} sx={{fontFamily:'Raleway', mt:'7%'}}>\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"/\">\r\n                Playlister\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport AuthContext from '../auth'\r\n\r\nimport Copyright from './Copyright'\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Link';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\nimport { Container } from '@mui/material';\r\n\r\nexport default function LoginScreen() {\r\n    const { auth } = useContext(AuthContext);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.currentTarget);\r\n        auth.loginUser(\r\n            formData.get('email'),\r\n            formData.get('password')\r\n        );\r\n\r\n    };\r\n\r\n    const modalStyle = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        color: \"black\",\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n        textAlign:'center',\r\n        borderRadius: '10px',\r\n        borderColor: '#c4c4c4',\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid',\r\n    };\r\n\r\n    let modalButtonStyle = { mt: 3, backgroundColor:'#cb997e', color:\"white\", fontWeight:'bold',\r\n        '&:hover': {\r\n            backgroundColor: '#c4c4c4',\r\n            color: '#cb997e',\r\n        },\r\n        fontFamily:'Raleway',\r\n    };\r\n\r\n    let inputPropsStyle = {style: {fontSize: 15, fontFamily:'Raleway'}}\r\n\r\n    return (\r\n        <div id=\"splash-screen\">\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n\r\n                <Modal\r\n                aria-describedby=\"modal-modal-description\"\r\n                open={auth.modalVisible}\r\n                className={\"modal \" + ((auth.modalVisible)? \"is-visible\": \"\")}\r\n                >   \r\n                    <Box sx = {modalStyle}>\r\n                        <Typography id=\"modal-modal-description\" sx={{ mt: 2, fontFamily:'Raleway', color:'#463f3a' }}>\r\n                        {auth.modalMsg}\r\n                        </Typography>\r\n                        <Button \r\n                        onClick={() => auth.hideModal()}\r\n                        sx = {modalButtonStyle}\r\n                        variant=\"contained\">Close</Button>\r\n                    </Box>\r\n                </Modal>\r\n\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        backgroundColor: 'white',\r\n                        padding: '10%',\r\n                        textAlign: 'center',\r\n                        width: '100%',\r\n                        borderRadius: '10px',\r\n                        borderColor: '#c4c4c4',\r\n                        borderWidth: '2px',\r\n                        borderStyle: 'solid',\r\n                        fontFamily:'Raleway',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: '#a5a58d' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\" sx={{ fontFamily:'Raleway', fontWeight: 'bold', fontSize: 25,}}>\r\n                        Log In\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3, width: '290px' }}>\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sx={{ fontFamily:'Raleway' }}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    inputProps={inputPropsStyle}\r\n                                    InputLabelProps={inputPropsStyle}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                    inputProps={inputPropsStyle}\r\n                                    InputLabelProps={inputPropsStyle}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2, backgroundColor:'#cb997e', color:\"white\", fontWeight:'bold',\r\n                            '&:hover': {\r\n                                backgroundColor: '#c4c4c4',\r\n                                color: '#cb997e',\r\n                            },\r\n                            fontFamily:'Raleway',\r\n                            width: '290px',\r\n                            }}\r\n                        >\r\n                            Log in\r\n                        </Button>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                            <Typography variant=\"body2\" sx={{ fontFamily:'Raleway' }}>\r\n                                Don't have an account? <Link href=\"/register/\" variant=\"body2\" color={'#a5a58d'} sx={{ fontFamily:'Raleway', fontWeight:'bold', textDecoration: 'none' }}> Sign Up</Link>\r\n                            </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Copyright sx={{ mt: 5 }} />\r\n                </Box>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import { useContext } from 'react';\r\nimport AuthContext from '../auth'\r\nimport Copyright from './Copyright'\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Link from '@mui/material/Link';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nexport default function RegisterScreen() {\r\n    const { auth } = useContext(AuthContext);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formData = new FormData(event.currentTarget);\r\n        auth.registerUser(\r\n            formData.get('username'),\r\n            formData.get('email'),\r\n            formData.get('firstName'),\r\n            formData.get('lastName'),\r\n            formData.get('password'),\r\n            formData.get('passwordVerify')\r\n        );\r\n    };\r\n\r\n    const modalStyle = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        color: \"black\",\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n        textAlign:'center',\r\n        borderRadius: '10px',\r\n        borderColor: '#c4c4c4',\r\n        borderWidth: '2px',\r\n        borderStyle: 'solid',\r\n    };\r\n\r\n    let modalButtonStyle = { mt: 3, backgroundColor:'#cb997e', color:\"white\", fontWeight:'bold',\r\n        '&:hover': {\r\n            backgroundColor: '#c4c4c4',\r\n            color: '#cb997e',\r\n        },\r\n        fontFamily:'Raleway',\r\n    };\r\n\r\n    let inputPropsStyle = {style: {fontSize: 15, fontFamily:'Raleway'}}\r\n\r\n    return (\r\n        <div id=\"splash-screen\">\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n\r\n                <Modal\r\n                aria-describedby=\"modal-modal-description\"\r\n                open={auth.modalVisible}\r\n                className={\"modal \" + ((auth.modalVisible)? \"is-visible\": \"\")}\r\n                >\r\n                    \r\n                <Box sx = {modalStyle}>\r\n                    <Typography id=\"modal-modal-description\" sx={{ mt: 2, fontFamily:'Raleway', color:'#463f3a' }}>\r\n                    {auth.modalMsg}\r\n                    </Typography>\r\n                    <Button \r\n                    onClick={() => auth.hideModal()}\r\n                    sx = {modalButtonStyle}\r\n                    variant=\"contained\">Close</Button>\r\n                    \r\n                </Box>\r\n                </Modal>\r\n\r\n                <Box\r\n                    sx={{\r\n                        marginTop: '-10%',\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        backgroundColor: 'white',\r\n                        padding: '10%',\r\n                        textAlign: 'center',\r\n                        width: '100%',\r\n                        borderRadius: '10px',\r\n                        borderColor: '#c4c4c4',\r\n                        borderWidth: '2px',\r\n                        borderStyle: 'solid',\r\n                        fontFamily:'Raleway',\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ m: 1, bgcolor: '#a5a58d' }}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\" sx={{ fontFamily:'Raleway', fontWeight: 'bold', fontSize: 25}}>\r\n                        Sign Up\r\n                    </Typography>\r\n                    <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n                        <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"username\"\r\n                                    label=\"Username\"\r\n                                    name=\"username\"\r\n                                    autoComplete=\"username\"\r\n                                    inputProps={inputPropsStyle}\r\n                                    InputLabelProps={inputPropsStyle}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    inputProps={inputPropsStyle}\r\n                                    InputLabelProps={inputPropsStyle}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    autoComplete=\"fname\"\r\n                                    name=\"firstName\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"firstName\"\r\n                                    label=\"First Name\"\r\n                                    inputProps={inputPropsStyle}\r\n                                    InputLabelProps={inputPropsStyle}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"lastName\"\r\n                                    label=\"Last Name\"\r\n                                    name=\"lastName\"\r\n                                    autoComplete=\"lname\"\r\n                                    inputProps={inputPropsStyle}\r\n                                    InputLabelProps={inputPropsStyle}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"new-password\"\r\n                                    inputProps={inputPropsStyle}\r\n                                    InputLabelProps={inputPropsStyle}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"passwordVerify\"\r\n                                    label=\"Password Verify\"\r\n                                    type=\"password\"\r\n                                    id=\"passwordVerify\"\r\n                                    autoComplete=\"new-password\"\r\n                                    inputProps={inputPropsStyle}\r\n                                    InputLabelProps={inputPropsStyle}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            sx={{ mt: 3, mb: 2, backgroundColor:'#cb997e', color:\"white\", fontWeight:'bold',\r\n                            '&:hover': {\r\n                                backgroundColor: '#c4c4c4',\r\n                                color: '#cb997e',\r\n                            },\r\n                            fontFamily:'Raleway',\r\n                            width: '315px',\r\n                            }}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Typography variant=\"body2\" sx={{ fontFamily:'Raleway' }}>\r\n                                Already have an account? <Link href=\"/login/\" variant=\"body2\" color={'#a5a58d'} sx={{ fontFamily:'Raleway', fontWeight:'bold', textDecoration: 'none' }}> Log In</Link>\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                    <Copyright sx={{ mt: 5 }} />\r\n                </Box>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import './App.css';\r\nimport { React } from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport { AuthContextProvider } from './auth';\r\nimport { GlobalStoreContextProvider } from './store'\r\nimport {\r\n    AppBanner,\r\n    HomeWrapper,\r\n    LoginScreen,\r\n    RegisterScreen,\r\n} from './components'\r\n/*\r\n    This is our application's top-level component.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\n/*\r\n  This is the entry-point for our application. Notice that we\r\n  inject our store into all the components in our application.\r\n  \r\n  @author McKilla Gorilla\r\n*/\r\nconst App = () => {   \r\n    return (\r\n        <BrowserRouter>\r\n            <AuthContextProvider>\r\n                <GlobalStoreContextProvider>              \r\n                    <AppBanner />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={HomeWrapper} />\r\n                        <Route path=\"/login/\" exact component={LoginScreen} />\r\n                        <Route path=\"/register/\" exact component={RegisterScreen} />\r\n                    </Switch>\r\n                </GlobalStoreContextProvider>\r\n            </AuthContextProvider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n/*\r\n  This is the entry-point for our application. Notice that we\r\n  inject our store into all the components in our application.\r\n  \r\n  @author McKilla Gorilla\r\n*/\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>  \r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}